(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{474:function(v,_,e){"use strict";e.r(_);var o=e(65),c=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"【offer-收割计划】这几道常见的面试题-你会几道"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#【offer-收割计划】这几道常见的面试题-你会几道"}},[v._v("#")]),v._v(" 【offer 收割计划】这几道常见的面试题，你会几道！")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/offer%E6%94%B6%E5%89%B2%E8%AE%A1%E5%88%92-%E7%AC%AC%E4%BA%8C%E5%BC%B9.png",alt:"offer收割计划-第二弹"}})]),v._v(" "),e("blockquote",[e("p",[v._v("📢 大家好，我是小丞同学，一名"),e("strong",[v._v("大二的前端爱好者")])]),v._v(" "),e("p",[v._v("📢 这篇文章将来讲讲几道常见的面试题")]),v._v(" "),e("p",[v._v("📢 非常感谢你的阅读，不对的地方欢迎指正 🙏")]),v._v(" "),e("p",[v._v("📢 "),e("strong",[v._v("愿你忠于自己，热爱生活")])])]),v._v(" "),e("h2",{attrs:{id:"💡-知识点抢先看"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#💡-知识点抢先看"}},[v._v("#")]),v._v(" 💡 知识点抢先看")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("BFC")]),v._v(" 是什么")]),v._v(" "),e("li",[e("code",[v._v("CSS")]),v._v(" 实现毛玻璃")]),v._v(" "),e("li",[v._v("伪数组和数组的区别")]),v._v(" "),e("li",[e("code",[v._v("['1', '2', '3'].map(parseInt)")])]),v._v(" "),e("li",[v._v("实现一个 sleep 函数")]),v._v(" "),e("li",[e("code",[v._v("react-router")]),v._v(" 里的 "),e("code",[v._v("<Link>")]),v._v(" 标签和 "),e("code",[v._v("<a>")]),v._v(" 标签有什么区别 https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/135")])]),v._v(" "),e("h2",{attrs:{id:"一、请说说什么是-bfc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、请说说什么是-bfc"}},[v._v("#")]),v._v(" 一、请说说什么是 BFC ？")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126132038720.png",alt:"image-20211126132038720"}})]),v._v(" "),e("p",[e("strong",[v._v("BFC")]),v._v(" 全称叫做块级格式化上下文，它是一个完全独立的布局空间，我们可以在这个空间当中对子元素进行布局，并且"),e("strong",[v._v("不会影响到空间外部")]),v._v("的布局")]),v._v(" "),e("p",[v._v("在 "),e("code",[v._v("W3C")]),v._v(" 中这样解释到")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("BFC")]),v._v("它决定了元素如何对其内容进行定位，以及与其它元素的关系和相互作用，当涉及到可视化布局时，"),e("code",[v._v("Block Formatting Context")]),v._v("提供了一个环境，"),e("code",[v._v("HTML")]),v._v("在这个环境中按照一定的规则进行布局。")])]),v._v(" "),e("p",[e("strong",[v._v("那么如何触发")]),v._v(" "),e("code",[v._v("BFC")]),v._v(" 呢？")]),v._v(" "),e("p",[v._v("一些经典的话术")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("float")]),v._v(" 不为 "),e("code",[v._v("none")])]),v._v(" "),e("li",[e("code",[v._v("position")]),v._v(" 的值不是 "),e("code",[v._v("static")]),v._v(" 或者 "),e("code",[v._v("relative")])]),v._v(" "),e("li",[e("code",[v._v("display")]),v._v(" 的值是 "),e("code",[v._v("inline-block")]),v._v(" 、"),e("code",[v._v("table-cell")]),v._v("、"),e("code",[v._v("flex")]),v._v("、"),e("code",[v._v("table-caption")]),v._v(" 以及 "),e("code",[v._v("inline-flex")])]),v._v(" "),e("li",[e("code",[v._v("overflow")]),v._v(" 的值不是 "),e("code",[v._v("visible")])])]),v._v(" "),e("p",[v._v("以及我比较喜欢用的 "),e("code",[v._v("display: flow-root")])]),v._v(" "),e("p",[v._v("我把它理解为一种专门用来触发 "),e("code",[v._v("BFC")]),v._v(" 的属性，它在块级元素的基础上进行了修正，在原来的块级盒子中，子元素开启 "),e("code",[v._v("float")]),v._v(" 时，会有父元素"),e("strong",[v._v("高度塌陷")]),v._v("等问题，父元素的高度，不会根据浮动元素的高度来设定，因此 "),e("code",[v._v("flow-root")]),v._v(" 这种新的布局方式，解决了这个问题，开启了 "),e("code",[v._v("flow-root")]),v._v(" 后，就会触发 "),e("code",[v._v("BFC")]),v._v("，从而解决高度塌陷等问题")]),v._v(" "),e("p",[e("code",[v._v("BFC")]),v._v(" "),e("strong",[v._v("有哪些布局规则呢？")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("BFC")]),v._v(" 就是一个块级元素，它的子元素会在垂直方向，一个接一个的放置")]),v._v(" "),e("li",[v._v("垂直方向的距离由 "),e("code",[v._v("margin")]),v._v(" 决定， 属于同一个 "),e("code",[v._v("BFC")]),v._v(" 的两个相邻的外边距会重叠")]),v._v(" "),e("li",[v._v("计算 "),e("code",[v._v("BFC")]),v._v(" 高度时，浮动元素需要参与计算")])]),v._v(" "),e("p",[e("code",[v._v("BFC")]),v._v(" "),e("strong",[v._v("解决了什么问题呢？")])]),v._v(" "),e("ol",[e("li",[v._v("浮动元素导致的高度塌陷")]),v._v(" "),e("li",[e("code",[v._v("margin")]),v._v(" 外边距合并，造成的原因是根元素也是一个 "),e("code",[v._v("BFC")]),v._v(" 元素")]),v._v(" "),e("li",[v._v("清除浮动")])]),v._v(" "),e("h2",{attrs:{id:"二、如何用-css-实现毛玻璃效果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、如何用-css-实现毛玻璃效果"}},[v._v("#")]),v._v(" 二、如何用 CSS 实现毛玻璃效果？")]),v._v(" "),e("p",[v._v("毛玻璃就是一种背景模糊的磨砂玻璃的效果，比较有层次感，有一种半透明的感觉")]),v._v(" "),e("p",[v._v("实现毛玻璃效果，主要依赖 "),e("code",[v._v("CSS")]),v._v(" 属性 "),e("code",[v._v("backdrop-filter")]),v._v("，这个属性可以为元素后面区域添加图形效果，类似于模糊，颜色偏移，因为它适用于元素背后的所有元素，因此我们必须使元素或"),e("strong",[v._v("背景部分透明")])]),v._v(" "),e("p",[e("strong",[v._v("如何实现呢")]),v._v("？")]),v._v(" "),e("p",[v._v("我们采用这个属性，设置一点模糊即可，但是这个属性有兼容性问题噢，需要注意噢~")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126215914743.png",alt:"image-20211126215914743"}})]),v._v(" "),e("p",[v._v("我们也可以看看和正常添加半透明效果的对比，可以看出第一个的透明感很强，没有"),e("strong",[v._v("磨砂的感觉")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126220139889.png",alt:"image-20211126220139889"}})]),v._v(" "),e("h2",{attrs:{id:"三、你知道伪数组吗-说说它和数组的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、你知道伪数组吗-说说它和数组的区别"}},[v._v("#")]),v._v(" 三、你知道伪数组吗？说说它和数组的区别")]),v._v(" "),e("p",[v._v("了解。伪数组就是一个像数组的对象，它为什么像数组呢，因为它有 "),e("code",[v._v("length")]),v._v(" 属性，同时它也和数组一样通过索引来存储数据")]),v._v(" "),e("p",[v._v("我们把符合以下条件的"),e("strong",[v._v("对象")]),v._v("称为伪数组：")]),v._v(" "),e("ul",[e("li",[v._v("具有 "),e("code",[v._v("length")]),v._v(" 属性")]),v._v(" "),e("li",[v._v("按照索引方式来存储数据")]),v._v(" "),e("li",[v._v("不具有数组的 "),e("code",[v._v("push")]),v._v(" 、"),e("code",[v._v("pop")]),v._v(" 等方法")])]),v._v(" "),e("p",[v._v("常见的伪数组有，"),e("code",[v._v("argument")]),v._v("参数，"),e("code",[v._v("JQ")]),v._v(" 对象、"),e("code",[v._v("document.querySelectorAll")]),v._v("、"),e("code",[v._v("document.getElementsByTagName")]),v._v(" 等返回的对象都是伪数组")]),v._v(" "),e("p",[v._v("在我们初学 "),e("code",[v._v("DOM")]),v._v(" 操作的时候，我们经常会获取到伪数组，我们最后都需要转化成真正的数组去操作，我们可以这样操作")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126221446767.png",alt:"image-20211126221446767"}})]),v._v(" "),e("p",[v._v("这样我们就能将伪数组转成真正的数组了")]),v._v(" "),e("p",[v._v("👉 "),e("strong",[v._v("总结一下")])]),v._v(" "),e("ol",[e("li",[v._v("都有 "),e("code",[v._v("length")]),v._v(" 属性")]),v._v(" "),e("li",[v._v("都是对象")]),v._v(" "),e("li",[v._v("类数组的 "),e("code",[v._v("length")]),v._v(" 属性不会自增")]),v._v(" "),e("li",[v._v("类数组没有原生数组的方法")])]),v._v(" "),e("h2",{attrs:{id:"四、来看看这题的输出-1-2-3-map-parseint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、来看看这题的输出-1-2-3-map-parseint"}},[v._v("#")]),v._v(" 四、来看看这题的输出 "),e("code",[v._v("['1', '2', '3'].map(parseInt)")])]),v._v(" "),e("p",[v._v("这题早已经看透了，答案我们后面再说")]),v._v(" "),e("p",[v._v("这题有两个考点，一个是 "),e("code",[v._v("map")]),v._v(" 、一个是 "),e("code",[v._v("parseInt")]),v._v(" ，这两个方法大家用的最多，但也是了解最少的，我们经常用 "),e("code",[v._v("map")]),v._v(" 来进行遍历，传入一个回调函数，操作 "),e("code",[v._v("item")]),v._v(" ，"),e("code",[v._v("parseInt")]),v._v(" 我们经常用来做类型转化，这些我们都很常用，但没有我们想象的那么简单")]),v._v(" "),e("p",[e("strong",[v._v("具体来看看 "),e("code",[v._v("parseInt")]),v._v(" 方法")])]),v._v(" "),e("p",[e("code",[v._v("parseInt")]),v._v(" 函数接收两个参数，第一个参数是我们要操作的字符串，第二个参数是指定的基数，也就是我们以多少进制来看待这个字符串")]),v._v(" "),e("p",[v._v("例如：在这里我们同样都是操作 "),e("code",[v._v("100")]),v._v(" 这个数，但是当我们第二个参数传入 "),e("code",[v._v("2")]),v._v(" 时，就会得到不一样的结果，在这里，它把 "),e("code",[v._v("100")]),v._v(" 看成了二进制的 "),e("code",[v._v("100")]),v._v(" 因此转化结果为 "),e("code",[v._v("4")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126223557570.png",alt:"image-20211126223557570"}})]),v._v(" "),e("p",[v._v("再来看看 "),e("code",[v._v("map")]),v._v(" 方法，它创建一个新的数组，结果是这个数组中每一个元素都调用这个提供的函数后返回的结果")]),v._v(" "),e("p",[v._v("它接受的回调函数有三个参数，其中两个可选，第一个参数是当前遍历的元素 "),e("code",[v._v("item")]),v._v("，第二个是当前元素的索引，第三个是这个数组本身")]),v._v(" "),e("p",[v._v("知道了 "),e("code",[v._v("parseInt")]),v._v(" 和 "),e("code",[v._v("map")]),v._v(" 方法的具体使用规则后，我们来看看这道题")]),v._v(" "),e("p",[v._v("由于 "),e("code",[v._v("parseInt")]),v._v(" 能够接收两个参数，字符串和基数， "),e("code",[v._v("map")]),v._v(" 方法会默认传递这两个参数给 "),e("code",[v._v("parseInt")]),v._v(" 方法，因此它实际上执行的是")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126224253651.png",alt:"image-20211126224253651"}})]),v._v(" "),e("p",[v._v("这样就明朗了，由于 "),e("code",[v._v("2、3")]),v._v(" 大于它们的基数 "),e("code",[v._v("1、2")]),v._v(" 导致了它们无法被转化，返回 "),e("code",[v._v("NaN")])]),v._v(" "),e("blockquote",[e("p",[v._v("最终结果："),e("code",[v._v("[1, NaN, NaN]")])])]),v._v(" "),e("p",[v._v("那如果我们真的要实现这个将数字字符串数组，转化成纯数字数组需要怎么做呢？如下 👇👇👇")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126224607200.png",alt:"image-20211126224607200"}})]),v._v(" "),e("h2",{attrs:{id:"五、来实现一个-sleep-函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、来实现一个-sleep-函数"}},[v._v("#")]),v._v(" 五、来实现一个 sleep 函数")]),v._v(" "),e("p",[e("code",[v._v("sleep")]),v._v(" 函数就是一个等待的函数，代码运行到这里时，需要等待 "),e("code",[v._v("sleep")]),v._v(" 函数执行完毕后，再继续执行")]),v._v(" "),e("p",[v._v("这题考验的是对于异步编程的理解，回调函数、生成器、"),e("code",[v._v("async")]),v._v(" 、"),e("code",[v._v("promise")]),v._v("，这些都可以实现")]),v._v(" "),e("blockquote",[e("p",[v._v("关于异步编程，具体可以查看博主的另一篇文章："),e("a",{attrs:{href:"https://juejin.cn/post/6998293153824391182",target:"_blank",rel:"noopener noreferrer"}},[v._v("深入理解 JavaScript 中的异步编程"),e("OutboundLink")],1)])]),v._v(" "),e("p",[v._v("首先我们先用最原始的"),e("strong",[v._v("回调函数")]),v._v("的方法来实现")]),v._v(" "),e("p",[v._v("我们接收一个回调函数和睡眠时间，采用 "),e("code",[v._v("setTimeout")]),v._v(" 来实现等待")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126225615822.png",alt:"image-20211126225615822"}})]),v._v(" "),e("p",[e("strong",[v._v("生成器")])]),v._v(" "),e("p",[v._v("利用 "),e("code",[v._v("yield")]),v._v(" 和 "),e("code",[v._v("next")]),v._v(" 来控制函数运行")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126225916370.png",alt:"image-20211126225916370"}})]),v._v(" "),e("p",[e("strong",[v._v("Promise")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126230123515.png",alt:"image-20211126230123515"}})]),v._v(" "),e("p",[e("strong",[v._v("async")])]),v._v(" "),e("p",[v._v("最优雅的写法")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126230312546.png",alt:"image-20211126230312546"}})]),v._v(" "),e("h2",{attrs:{id:"六、react-router-dom-中的-link-标签和-a-标签有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六、react-router-dom-中的-link-标签和-a-标签有什么区别"}},[v._v("#")]),v._v(" 六、react-router-dom 中的 "),e("code",[v._v("<Link>")]),v._v(" 标签和 "),e("code",[v._v("<a>")]),v._v(" 标签有什么区别")]),v._v(" "),e("p",[v._v("首先，从 "),e("code",[v._v("DOM")]),v._v(" 渲染出来的标签来看，它们都是 "),e("code",[v._v("a")]),v._v(" 标签")]),v._v(" "),e("p",[v._v("它们的区别再于 "),e("code",[v._v("Link")]),v._v(" 标签是 "),e("code",[v._v("react-router")]),v._v(" 中实现路由跳转的链接，它和传统的页面跳转不一样， "),e("code",[v._v("Link")]),v._v(" 跳转只会触发相匹配的 "),e("code",[v._v("Route")]),v._v(" 对应的页面进行更新，不会刷新整个页面")]),v._v(" "),e("p",[v._v("而对于 "),e("code",[v._v("a")]),v._v(" 标签来说，它会从当前页面跳转到 "),e("code",[v._v("href")]),v._v(" 指向的另一个页面")]),v._v(" "),e("p",[v._v("因此也可以说，"),e("code",[v._v("LInk")]),v._v(" 跳转不会刷新页面， "),e("code",[v._v("a")]),v._v(" 标签跳转回刷新页面")]),v._v(" "),e("p",[v._v("我们再来看看 "),e("code",[v._v("Link")]),v._v(" 标签在页面跳转的时候都做了什么")]),v._v(" "),e("p",[v._v("来看看源码")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211126232055665.png",alt:"image-20211126232055665"}})]),v._v(" "),e("ol",[e("li",[v._v("当有 "),e("code",[v._v("onClick")]),v._v(" 事件时执行 "),e("code",[v._v("onClick")])]),v._v(" "),e("li",[e("code",[v._v("click")]),v._v(" 时回阻止 "),e("code",[v._v("a")]),v._v(" 标签的默认事件，防止 "),e("code",[v._v("a")]),v._v(" 标签跳转")]),v._v(" "),e("li",[v._v("再取得 "),e("code",[v._v("href")]),v._v(" ，用 "),e("code",[v._v("history")]),v._v(" 的方式进行跳转，触发了页面的 "),e("code",[v._v("hashChange")]),v._v(" 事件，"),e("code",[v._v("Router")]),v._v(" 内部进行捕获监听来处理跳转逻辑，不刷新页面")])]),v._v(" "),e("p",[v._v("最后总结以下")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("Link")]),v._v(" 页面无刷新跳转，"),e("code",[v._v("a")]),v._v(" 标签进行刷新")]),v._v(" "),e("li",[e("code",[v._v("Link")]),v._v(" 标签会阻止 "),e("code",[v._v("a")]),v._v(" 标签的默认事件，采用 "),e("code",[v._v("history")]),v._v(" 进行跳转")])]),v._v(" "),e("hr"),v._v(" "),e("h2",{attrs:{id:"📖-总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#📖-总结"}},[v._v("#")]),v._v(" 📖 总结")]),v._v(" "),e("p",[v._v("通过这几道面试题，我们重新温习了 "),e("code",[v._v("BFC")]),v._v("、"),e("code",[v._v("map")]),v._v("、"),e("code",[v._v("parseInt")]),v._v(" 这些小而却非常常用的方法，对于它们的细节我们也有了一定的学习，最后我们剖析了 "),e("code",[v._v("react-router-dom")]),v._v(" 中 "),e("code",[v._v("Link")]),v._v(" 和 "),e("code",[v._v("a")]),v._v(" 标签的区别，感觉收获还是很大！")]),v._v(" "),e("p",[v._v("最后，我是小丞同学，欢迎大家关注本专栏，持续关注最新文章~祝愿大家拿到心仪的 "),e("code",[v._v("offer")])]),v._v(" "),e("blockquote",[e("p",[v._v("最后，可能在很多地方讲诉的不够清晰，请见谅")]),v._v(" "),e("p",[v._v("💌 如果文章有什么错误的地方，或者有什么疑问，欢迎留言，也欢迎私信交流")])])])}),[],!1,null,null,null);_.default=c.exports}}]);