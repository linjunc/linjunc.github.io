(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{455:function(t,s,a){"use strict";a.r(s);var e=a(62),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/img/react-%E8%B7%AF%E7%94%B1.gif",alt:"React路由"}})]),t._v(" "),a("blockquote",[a("p",[t._v("📢 大家好，我是小丞同学，一名"),a("font",{attrs:{color:"#2e86de"}},[a("strong",[t._v("大二的前端爱好者")])])],1),t._v(" "),a("p",[t._v("📢 这篇文章是学习 React 中 React 路由跳转的学习笔记")]),t._v(" "),a("p",[t._v("📢 非常感谢你的阅读，不对的地方欢迎指正 🙏")]),t._v(" "),a("p",[t._v("📢 "),a("font",{attrs:{color:"#f368e0"}},[a("strong",[t._v("愿你忠于自己，热爱生活")])])],1)]),t._v(" "),a("h2",{attrs:{id:"_1-push-与-replace-模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-push-与-replace-模式"}},[t._v("#")]),t._v(" 1. push 与 replace 模式")]),t._v(" "),a("p",[t._v("默认情况下，开启的是 push 模式，也就是说，每次点击跳转，都会向栈中压入一个新的地址，在点击返回时，可以返回到上一个打开的地址，")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/img/react-router-push.gif",alt:"react-router-push"}})]),t._v(" "),a("p",[t._v("就像上图一样，我们每次返回都会返回到上一次点击的地址中")]),t._v(" "),a("p",[t._v("当我们在读消息的时候，有时候我们可能会不喜欢这种繁琐的跳转，我们可以开启 replace 模式，这种模式与 push 模式不同，它会将当前地址"),a("strong",[t._v("替换")]),t._v("成点击的地址，也就是替换了新的栈顶")]),t._v(" "),a("p",[t._v("我们只需要在需要开启的链接上加上 "),a("code",[t._v("replace")]),t._v(" 即可")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Link replace to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pathname")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home/message/detail'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" msgObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" msgObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("msgObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/img/react-router-replace.gif",alt:"react-router-replace"}})]),t._v(" "),a("h2",{attrs:{id:"_2-编程式路由导航"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-编程式路由导航"}},[t._v("#")]),t._v(" 2. 编程式路由导航")]),t._v(" "),a("p",[t._v("我们可以采用绑定事件的方式实现路由的跳转，我们在按钮上绑定一个 "),a("code",[t._v("onClick")]),t._v(" 事件，当事件触发时，我们执行一个回调 "),a("code",[t._v("replaceShow")])]),t._v(" "),a("p",[t._v("这个函数接收两个参数，用来仿制默认的跳转方式，第一个是点击的 id 第二个是标题")]),t._v(" "),a("p",[t._v("我们在回调中，调用 "),a("code",[t._v("this.props.location")]),t._v(" 对象下的 replace 方法")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("replaceShow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/home/message/detail/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("同时我们可以借助 "),a("code",[t._v("this.props.history")]),t._v(" 身上的 API 实现路由的跳转，例如 "),a("code",[t._v("go")]),t._v("、"),a("code",[t._v("goBack")]),t._v(" 、"),a("code",[t._v("goForward")])]),t._v(" "),a("h2",{attrs:{id:"_3-withrouter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-withrouter"}},[t._v("#")]),t._v(" 3. withRouter")]),t._v(" "),a("p",[t._v("当我们需要在页面内部添加回退前进等按钮时，由于这些组件我们一般通过一般组件的方式去编写，因此我们会遇到一个问题，"),a("strong",[t._v("无法获得 history 对象")]),t._v("，这正是因为我们采用的是一般组件造成的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/img/image-20210906231051190.png",alt:"image-20210906231051190"}})]),t._v(" "),a("p",[t._v("只有路由组件才能获取到 history 对象")]),t._v(" "),a("p",[t._v("因此我们需要如何解决这个问题呢")]),t._v(" "),a("p",[t._v("我们可以利用 "),a("code",[t._v("react-router-dom")]),t._v(" 对象下的 "),a("code",[t._v("withRouter")]),t._v(" 函数来对我们导出的 "),a("code",[t._v("Header")]),t._v(" 组件进行包装，这样我们就能获得一个拥有 "),a("code",[t._v("history")]),t._v(" 对象的一般组件")]),t._v(" "),a("p",[t._v("我们需要对哪个组件包装就在哪个组件下引入")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Header/index.jsx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" withRouter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-router-dom'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在最后导出对象时，用 `withRouter` 函数对 index 进行包装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("withRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("这样就能让一般组件获得路由组件所特有的 API")]),t._v(" "),a("h2",{attrs:{id:"_4-browserrouter-和-hashrouter-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-browserrouter-和-hashrouter-的区别"}},[t._v("#")]),t._v(" 4. BrowserRouter 和 HashRouter 的区别")]),t._v(" "),a("h4",{attrs:{id:"它们的底层实现原理不一样"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#它们的底层实现原理不一样"}},[t._v("#")]),t._v(" "),a("strong",[t._v("它们的底层实现原理不一样")])]),t._v(" "),a("p",[t._v("对于 BrowserRouter 来说它使用的是 React 为它封装的 history API ，这里的 history 和浏览器中的 history 有所不同噢！通过操作这些 API 来实现路由的保存等操作，但是这些 API 是 H5 中提出的，因此不兼容 IE9 以下版本。")]),t._v(" "),a("p",[t._v("对于 HashRouter 而言，它实现的原理是通过 URL 的哈希值，但是这句话我不是很理解，用一个简单的解释就是")]),t._v(" "),a("p",[t._v("我们可以理解为是锚点跳转，因为锚点跳转会保存历史记录，从而让 HashRouter 有了相关的前进后退操作，HashRouter 不会将 "),a("code",[t._v("#")]),t._v(" 符号后面的内容请求。兼容性更好！")]),t._v(" "),a("h4",{attrs:{id:"地址栏的表现形式不一样"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#地址栏的表现形式不一样"}},[t._v("#")]),t._v(" 地址栏的表现形式不一样")]),t._v(" "),a("ul",[a("li",[t._v("HashRouter 的路径中包含 "),a("code",[t._v("#")]),t._v(" ，例如 "),a("code",[t._v("localhost:3000/#/demo/test")])])]),t._v(" "),a("h4",{attrs:{id:"刷新后路由-state-参数改变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#刷新后路由-state-参数改变"}},[t._v("#")]),t._v(" 刷新后路由 state 参数改变")]),t._v(" "),a("ol",[a("li",[t._v("在BrowserRouter 中，state 保存在history 对象中，刷新不会丢失")]),t._v(" "),a("li",[t._v("HashRouter 则刷新会丢失 state")])])])}),[],!1,null,null,null);s.default=r.exports}}]);