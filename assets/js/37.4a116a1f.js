(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{481:function(t,s,n){"use strict";n.r(s);var a=n(65),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("随着 "),n("code",[t._v("render")]),t._v(" 阶段的完成，也意味着在内存中"),n("strong",[t._v("构建 "),n("code",[t._v("workInProgress Fiber")]),t._v(" 树")]),t._v("的所有工作都已经完成，这其中包括了对 Fiber 节点的 "),n("code",[t._v("update")]),t._v("、"),n("code",[t._v("diff")]),t._v("、"),n("code",[t._v("flags 标记")]),t._v("、"),n("code",[t._v("subtreeFlags")]),t._v("（effectList） 的收集等操作"),n("br"),t._v("我们知道，在 "),n("code",[t._v("render")]),t._v(" 阶段，会将需要更新的节点"),n("strong",[t._v("标记上")]),t._v(" "),n("code",[t._v("flags")]),t._v(" （effectTag），在 "),n("code",[t._v("completeWork")]),t._v(" 阶段会"),n("strong",[t._v("形成")]),t._v(" "),n("code",[t._v("effectList")]),t._v(" 链表，"),n("strong",[t._v("连接所有需要被更新的节点")]),t._v("。")]),t._v(" "),n("p",[t._v("为了将这些需要更新的节点应用到真实 DOM 上却不需要"),n("strong",[t._v("遍历整棵树")]),t._v("，在 "),n("code",[t._v("commit")]),t._v(" 阶段，会通过"),n("strong",[t._v("遍历这条 "),n("code",[t._v("EffectList")]),t._v(" 链表")]),t._v("，执行对应的操作，来完成对真实 DOM 的更新，这也叫做 "),n("code",[t._v("mutation")]),t._v("，即 "),n("strong",[t._v("DOM 节点的增删改操作")]),t._v("。")]),t._v(" "),n("blockquote",[n("p",[t._v("在新版本中不再需要 effectList 链表了，而是通过 rootFiber 自下而上调和的方式处理这些标志，执行对应的操作，来完成对真实 DOM 的更新")])]),t._v(" "),n("p",[t._v("接下来我们带着"),n("strong",[t._v("以下的问题")]),t._v("一起去思考 commit 阶段的工作！")]),t._v(" "),n("ul",[n("li",[t._v("commit 阶段分为几个子阶段，都做了什么事情？")]),t._v(" "),n("li",[t._v("如何执行生命周期和 hooks 钩子的回调及销毁函数？")]),t._v(" "),n("li",[t._v("commit 阶段是如何更新 DOM 节点的？")]),t._v(" "),n("li",[t._v("useEffect 钩子是如何被调度的？")])]),t._v(" "),n("hr"),t._v(" "),n("p",[n("code",[t._v("commit")]),t._v(" 阶段会做以下这些事情")]),t._v(" "),n("ul",[n("li",[t._v("对一些"),n("strong",[t._v("生命周期和副作用钩子的处理")]),t._v("，比如 类组件的 "),n("code",[t._v("componentDidMount")]),t._v(" 、"),n("code",[t._v("componentDidUpdate")]),t._v("，函数组件的 "),n("code",[t._v("useEffect")]),t._v("、"),n("code",[t._v("useLayoutEffect")]),t._v(" 、"),n("code",[t._v("useInsertionEffect")]),t._v(" 等")]),t._v(" "),n("li",[t._v("另一方面，在一次 Update 中，进行添加节点（"),n("code",[t._v("Placement")]),t._v("）、更新节点（"),n("code",[t._v("Update")]),t._v("）、删除节点（"),n("code",[t._v("Deletion")]),t._v("）、同时有对 "),n("code",[t._v("ref")]),t._v(" 的处理等。")])]),t._v(" "),n("p",[n("code",[t._v("commit")]),t._v(" 阶段的"),n("strong",[t._v("入口在 "),n("code",[t._v("commitRoot")]),t._v(" 函数")]),t._v("，在这里会发起一个最高优先级的调度任务，然后调用 "),n("code",[t._v("commitRootImpl")]),t._v(" 函数来处理副作用，将最新的 Fiber 树同步到 DOM 上")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" previousUpdateLanePriority "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentUpdatePriority")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevTransition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ReactCurrentBatchConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ReactCurrentBatchConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCurrentUpdatePriority")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DiscreteEventPriority"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最高优先级调度")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRootImpl")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" previousUpdateLanePriority"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// commit 主流程")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置")]),t._v("\n    ReactCurrentBatchConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prevTransition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCurrentUpdatePriority")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("previousUpdateLanePriority"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("h2",{attrs:{id:"流程概览"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#流程概览"}},[t._v("#")]),t._v(" 流程概览")]),t._v(" "),n("p",[n("code",[t._v("commit")]),t._v("阶段主要针对 "),n("code",[t._v("rootFiber")]),t._v("上的 "),n("code",[t._v("effectList")]),t._v("进行处理，根据对 DOM 的操作时机可以"),n("strong",[t._v("分为三个子阶段")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Before mutation")]),t._v("阶段（执行 DOM 操作前）：读取组件变更前的状态\n"),n("ul",[n("li",[t._v("对于 CC 而言，会执行 "),n("code",[t._v("getSnapshotBeforeUpdate")]),t._v("，获取 DOM "),n("strong",[t._v("更新前")]),t._v("的组件实例信息（更新前）")]),t._v(" "),n("li",[t._v("对于 FC 而言，会异步调度 "),n("code",[t._v("useEffect")]),t._v(" 钩子")])])]),t._v(" "),n("li",[n("code",[t._v("mutation")]),t._v(" 阶段（执行 DOM 操作）：\n"),n("ul",[n("li",[t._v("对于 "),n("code",[t._v("HostComponent")]),t._v(" 会执行相应的 DOM 操作")]),t._v(" "),n("li",[t._v("对于 CC 会调用 "),n("code",[t._v("componentWillUnmount")])]),t._v(" "),n("li",[t._v("对于 FC 会执行 "),n("code",[t._v("useLayoutEffect")]),t._v(" 的"),n("strong",[t._v("销毁函数")])])])]),t._v(" "),n("li",[n("code",[t._v("layout")]),t._v(" 阶段（执行 DOM 操作后）：在 DOM 操作完成后，读取当前组件的状态（更新后）\n"),n("ul",[n("li",[t._v("对于 CC ，会调用 "),n("code",[t._v("componentDidMount")]),t._v(" 和 "),n("code",[t._v("componentDidUpdate")]),t._v(" 以及 "),n("code",[t._v("setState")]),t._v(" 的回调函数")]),t._v(" "),n("li",[t._v("对于 FC ，会执行 "),n("code",[t._v("useLayoutEffect")]),t._v(" 的回调函数")])])])]),t._v(" "),n("p",[t._v("在这当中，需要注意的是，在 "),n("code",[t._v("mutation")]),t._v(" 阶段结束后，"),n("code",[t._v("layout")]),t._v(" 开始之前，"),n("code",[t._v("workInProgress")]),t._v(" 树会切换成 "),n("code",[t._v("current")]),t._v(" 树。这样做是为了")]),t._v(" "),n("ul",[n("li",[t._v("在 "),n("code",[t._v("mutation")]),t._v(" 阶段调用类组件的 "),n("code",[t._v("componentWillUnmount")]),t._v("的时候， 可以获取到"),n("strong",[t._v("卸载前")]),t._v("的组件信息")]),t._v(" "),n("li",[t._v("在 "),n("code",[t._v("layout")]),t._v("阶段调用 "),n("code",[t._v("componentDidMount/Update")]),t._v(" 时，获取的组件信息是组件"),n("strong",[t._v("更新后")]),t._v("的。")])]),t._v(" "),n("p",[n("code",[t._v("commit")]),t._v(" 阶段的主流程在 "),n("code",[t._v("commitRootImpl")]),t._v(" 这个函数中，可以明确的看到三个子阶段的执行")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitRootImpl")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" renderPriorityLevel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOTE： 采用 do while 的作用是，在 useEffect 内部可能会触发新的更新，新的更新可能会触发新的副作用 ，因此需要不断的循环，直到 为 null")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushPassiveEffects")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rootWithPendingPassiveEffects "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note：这一步是为了看看还有没有没有执行的 useEffect， 有的话先执行他们")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" finishedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前的 rootFiber")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优先级相关")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedLanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绑定 scheduler 的回调函数")]),t._v("\n  root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbackPriority "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NoLane"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" remainingLanes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeLanes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("markRootFinished")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remainingLanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note：处理光标，重置一些 render 阶段使用的变量")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子树是否有更新")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subtreeHasEffects "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subtreeFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BeforeMutationMask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MutationMask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" LayoutMask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" PassiveMask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v("\n    NoFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rootHasEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BeforeMutationMask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MutationMask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" LayoutMask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" PassiveMask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v("\n    NoFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subtreeHasEffects "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" rootHasEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存在副作用，处理 Fiber 上的副作用")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个阶段是 before mutation ，在这个阶段可以读取改变之前的的 state")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生命周期函数 getSnapshotBeforeUpdate 的调用")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shouldFireAfterActiveInstanceBlur "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitBeforeMutationEffects")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  mutation 阶段，可以在这个阶段 改变 host tree")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitMutationEffects")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 交换 workInProgress")]),t._v("\n    root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行 layout")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitLayoutEffects")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finishedWork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lanes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestPaint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置执行栈环境")]),t._v("\n    executionContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prevExecutionContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将优先级重置为之前的 非同步优先级")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCurrentUpdatePriority")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("previousPriority"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ReactCurrentBatchConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prevTransition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// No effects.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note：commit 阶段结尾，可能会在 commit 阶段产生新的更新，因此在 commit 阶段的结尾会重新调度一次")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensureRootIsScheduled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note：react 中会将同步任务放在 flushSync 队列中，执行这个函数会执行它里面的同步任务")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note：默认 react 中开启的是 legacy 模式，这种模式下的更新都是 同步的 更新，未来会开启 concurrent 模式（并发模式），会出现不同优先级的更新")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushSyncCallbacks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br")])]),n("p",[t._v("接下来我们去看看每个阶段都分别做了哪些工作！")]),t._v(" "),n("br")])}),[],!1,null,null,null);s.default=e.exports}}]);