import{_ as e,c as a,o as t,U as o}from"./chunks/framework.4d5e0f31.js";const u=JSON.parse('{"title":"WebSocket 相关面试题","description":"","frontmatter":{},"headers":[],"relativePath":"pages/network/websocket.md","lastUpdated":1680247278000}'),c={name:"pages/network/websocket.md"},r=o('<h1 id="websocket-相关面试题" tabindex="-1">WebSocket 相关面试题 <a class="header-anchor" href="#websocket-相关面试题" aria-label="Permalink to &quot;WebSocket 相关面试题&quot;">​</a></h1><h2 id="http-和-websocket-的区别" tabindex="-1">HTTP 和 WebSocket 的区别 <a class="header-anchor" href="#http-和-websocket-的区别" aria-label="Permalink to &quot;HTTP 和 WebSocket 的区别&quot;">​</a></h2><h2 id="websocket-的握手过程" tabindex="-1">WebSocket 的握手过程 <a class="header-anchor" href="#websocket-的握手过程" aria-label="Permalink to &quot;WebSocket 的握手过程&quot;">​</a></h2><h2 id="websocket-的一些应用场景和优缺点" tabindex="-1">WebSocket 的一些应用场景和优缺点. <a class="header-anchor" href="#websocket-的一些应用场景和优缺点" aria-label="Permalink to &quot;WebSocket 的一些应用场景和优缺点.&quot;">​</a></h2><h2 id="websocket-协议的-api-如何在-javascript-中实现" tabindex="-1">WebSocket 协议的 API 如何在 JavaScript 中实现. <a class="header-anchor" href="#websocket-协议的-api-如何在-javascript-中实现" aria-label="Permalink to &quot;WebSocket 协议的 API 如何在 JavaScript 中实现.&quot;">​</a></h2><h2 id="websocket-的生命周期及其与-http-协议的关系" tabindex="-1">WebSocket 的生命周期及其与 HTTP 协议的关系； <a class="header-anchor" href="#websocket-的生命周期及其与-http-协议的关系" aria-label="Permalink to &quot;WebSocket 的生命周期及其与 HTTP 协议的关系；&quot;">​</a></h2><h2 id="websocket-消息传输的优化" tabindex="-1">WebSocket 消息传输的优化； <a class="header-anchor" href="#websocket-消息传输的优化" aria-label="Permalink to &quot;WebSocket 消息传输的优化；&quot;">​</a></h2><h2 id="websocket-与-ajax-长轮询-服务器推送的区别是什么" tabindex="-1">WebSocket 与 Ajax/长轮询/服务器推送的区别是什么？ <a class="header-anchor" href="#websocket-与-ajax-长轮询-服务器推送的区别是什么" aria-label="Permalink to &quot;WebSocket 与 Ajax/长轮询/服务器推送的区别是什么？&quot;">​</a></h2><h2 id="websocket-有多少种状态-分别是什么" tabindex="-1">WebSocket 有多少种状态？分别是什么？ <a class="header-anchor" href="#websocket-有多少种状态-分别是什么" aria-label="Permalink to &quot;WebSocket 有多少种状态？分别是什么？&quot;">​</a></h2><h2 id="websocket-的特点有哪些-与传统请求和响应相比有何优势" tabindex="-1">WebSocket 的特点有哪些？与传统请求和响应相比有何优势？ <a class="header-anchor" href="#websocket-的特点有哪些-与传统请求和响应相比有何优势" aria-label="Permalink to &quot;WebSocket 的特点有哪些？与传统请求和响应相比有何优势？&quot;">​</a></h2><h2 id="如何在服务器端实现-websocket-基于-node-js-的实现方式是什么" tabindex="-1">如何在服务器端实现 WebSocket？基于 Node.js 的实现方式是什么？ <a class="header-anchor" href="#如何在服务器端实现-websocket-基于-node-js-的实现方式是什么" aria-label="Permalink to &quot;如何在服务器端实现 WebSocket？基于 Node.js 的实现方式是什么？&quot;">​</a></h2><h2 id="多通道的工作原理是什么" tabindex="-1">多通道的工作原理是什么？ <a class="header-anchor" href="#多通道的工作原理是什么" aria-label="Permalink to &quot;多通道的工作原理是什么？&quot;">​</a></h2>',12),s=[r];function b(h,i,k,n,l,d){return t(),a("div",null,s)}const w=e(c,[["render",b]]);export{u as __pageData,w as default};
