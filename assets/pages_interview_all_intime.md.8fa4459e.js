import{_ as s,c as o,o as a,V as e}from"./chunks/framework.3d11d069.js";const C=JSON.parse('{"title":"面试题汇总","description":"","frontmatter":{},"headers":[],"relativePath":"pages/interview/all/intime.md","filePath":"pages/interview/all/intime.md","lastUpdated":1691330952000}'),n={name:"pages/interview/all/intime.md"},l=e(`<h1 id="面试题汇总" tabindex="-1">面试题汇总 <a class="header-anchor" href="#面试题汇总" aria-label="Permalink to &quot;面试题汇总&quot;">​</a></h1><blockquote><p>来自于自己的面试，以及牛客</p></blockquote><h2 id="promise-输出结果" tabindex="-1">Promise 输出结果 <a class="header-anchor" href="#promise-输出结果" aria-label="Permalink to &quot;Promise 输出结果&quot;">​</a></h2><p>下面代码运行结果，并解释原因</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(console</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>输出 a</p><p>首先 promise 的状态是不可扭转的，<code>Promise.resolve(&quot;a&quot;)</code> 返回一个状态为已解决（fulfilled）且结果值为 &quot;a&quot; 的 Promise 对象。</p><p><code>then(&quot;b&quot;)</code> 中 &quot;b&quot; <strong>并非一个函数</strong>，这里的 &quot;b&quot; 会被忽略。根据 Promise 规范，如果 then 方法传入的参数不是函数，将使用<strong>默认透传处理器</strong>。这意味着该 Promise 对象的结果值保持不变，<strong>仍为 &quot;a&quot;</strong>。</p><p><code>Promise.resolve(&quot;c&quot;)</code> 同理，不是一个函数，因此最终会输出 a</p></div><h3 id="追问-如何才能输出-c" tabindex="-1">（追问）：如何才能输出 c <a class="header-anchor" href="#追问-如何才能输出-c" aria-label="Permalink to &quot;（追问）：如何才能输出 c&quot;">​</a></h3><p>可以在 then 方法中传入一个函数，该函数返回 <code>Promise.resolve(&quot;c&quot;)</code>，例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(console</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>该函数通过箭头函数隐式地返回了 <code>Promise.resolve(&quot;c&quot;)</code> 的结果。</p>`,10),p=[l];function t(r,c,i,D,F,y){return a(),o("div",null,p)}const u=s(n,[["render",t]]);export{C as __pageData,u as default};
