import{_ as e,c as o,o as d,V as a}from"./chunks/framework.3d11d069.js";const h=JSON.parse('{"title":"经常使用npm命令，你真的知道它的意思吗？","description":"NPM是什么？ 它是一个命令行工具，npm已经被全球超过1100万开发人员所依赖，- 拥有超过一百万个软件包，是世界上最大的软件注册表。","frontmatter":{"title":"经常使用npm命令，你真的知道它的意思吗？","date":"2021-05-17T19:00:03.000Z","id":1635663603,"photos":null,"tags":["npm"],"categories":["前端总结"],"keywords":"npm命令,小丞同学","description":"NPM是什么？ 它是一个命令行工具，npm已经被全球超过1100万开发人员所依赖，- 拥有超过一百万个软件包，是世界上最大的软件注册表。"},"headers":[],"relativePath":"pages/summary/npm.md","filePath":"pages/summary/npm.md","lastUpdated":1692936659000}'),c={name:"pages/summary/npm.md"},n=a('<h2 id="npm是什么" tabindex="-1">NPM是什么？ <a class="header-anchor" href="#npm是什么" aria-label="Permalink to &quot;NPM是什么？&quot;">​</a></h2><p>它是一个命令行工具，<code>npm</code>已经被全球超过1100万开发人员所依赖，- 拥有超过一百万个软件包，是世界上最大的软件注册表。也可以形象的理解为一个应用商城，我们可以在里面下载各种已经编写好的代码，像常用的<code>jQuery</code>，<code>webpack</code>等等。<a href="https://docs.npmjs.com/" target="_blank" rel="noreferrer">官网链接</a></p><h2 id="npm的安装" tabindex="-1">NPM的安装 <a class="header-anchor" href="#npm的安装" aria-label="Permalink to &quot;NPM的安装&quot;">​</a></h2><ul><li><code>npm</code>是<a href="http://nodejs.cn" target="_blank" rel="noreferrer">Node.js</a>默认的软件包管理系统，安装完node后，会默认安装好npm</li></ul><p>安装完毕后，使用cmd控制台(<code>win + R</code>)，使用命令<code>node -v</code>查看node版本，<code>npm -v</code>查看<code>npm</code>版本</p><ul><li>使用命令<code>npm i npm -g</code>全局安装<code>npm</code>，会默认更新最新版本</li></ul><h2 id="npm-的基本使用" tabindex="-1">NPM 的基本使用 <a class="header-anchor" href="#npm-的基本使用" aria-label="Permalink to &quot;NPM 的基本使用&quot;">​</a></h2><ul><li><p><code>npm -v</code> ：通过==查看版本==，看<code>npm</code>是否安装成功</p></li><li><p><code>npm install &lt;Module Name&gt;</code>： 使用 <code>npm </code>命令==安装模块==，例如<code>npm install jquery</code></p></li><li><p><code>npm uninstall &lt;Module Name&gt;</code>： 使用命令==卸载模块==，例如<code>npm uninstall jquery</code></p></li><li><p><code>npm update &lt;Module Name&gt;</code>： 使用命令==更新模块==，例如<code>npm update jquery</code></p></li><li><p><code>npm install &lt;Module Name&gt; -g</code> ： 可以直接在命令行里使用，安装在==全局==</p></li><li><p><code>npm list -g </code>：查看所有全局安装的模块</p></li><li><p><code>npm list vue </code>：查看某个模块的==版本号==</p></li><li><p><code>npm -g install npm@5.9.1</code>：（@后跟版本号）这样我们就可以更新<code>npm</code>版本，==指定安装版本号==</p></li><li><p><code>npm install -save moduleName</code>：<code> -save</code> 在package文件的<code>dependencies</code>节点写入依赖。默认值</p></li><li><p><code>npm install -save-dev moduleName</code> ：<code> -save-dev</code> 在package文件的<code>devDependencies</code>节点写入依赖</p></li><li><p><code>dependencies</code>：==运行时==的依赖，发布后，即生产环境下还需要用的模块</p></li><li><p><code>devDependencies</code>：==开发时==的依赖。里面的模块是开发时用的，发布时用不到它。</p></li></ul><h2 id="npm-镜像的设置和查看" tabindex="-1">NPM 镜像的设置和查看 <a class="header-anchor" href="#npm-镜像的设置和查看" aria-label="Permalink to &quot;NPM 镜像的设置和查看&quot;">​</a></h2><p><strong>查看镜像配置结果</strong> ：<code>npm config get registry</code></p><p><strong>将<code>npm</code>设置为淘宝镜像</strong>：<code>npm config set registry https://registry.npm.taobao.org --global</code></p><p><strong>使用<code>nrm</code>工具切换淘宝源</strong>：<code>npx nrm use taobao</code></p><p><strong>切换到官方源</strong>：<code>npx nrm use npm</code></p><h2 id="package-json-属性说明" tabindex="-1">Package.json 属性说明 <a class="header-anchor" href="#package-json-属性说明" aria-label="Permalink to &quot;Package.json 属性说明&quot;">​</a></h2><ul><li><p><code>name</code> ：包名。</p></li><li><p><code>version</code> ：包的版本号。</p></li><li><p><code>description</code> ：包的描述。</p></li><li><p><code>homepage</code> ：包的官网 url 。</p></li><li><p><code>author</code> ：包的作者姓名。</p></li><li><p><code>dependencies</code> ：依赖包列表</p></li><li><p><code>repository </code>：包代码存放的地方的类型。</p></li><li><p><code>main</code> ：main 字段指定了程序的主入口文件，<code>require(&#39;moduleName&#39;) </code>就会加载这个文件。</p></li><li><p><code>keywords</code> ：关键字</p></li></ul><p><strong>注意：</strong></p><p><code>package.json</code>文件中版本号的说明，安装的时候代表不同的含义：</p><p>&quot;7.14.0&quot; 表示安装指定的<code>7.14.0</code>版本</p><p>&quot;~7.14.0&quot; 表示安装 <code>7.0.x</code> 中最新的版本</p><p>&quot;^7.14.0&quot; 表示安装<code>7.x.x</code>中最新的版本</p><p>==特别注意==：当我们将代码文件拷贝给别人时，如果只拷贝了<code>package.json</code>文件，可以使用命令<code>npm install</code>会直接安装<code>package.json</code>下的所有依赖</p><h1 id="yarn" tabindex="-1">yarn <a class="header-anchor" href="#yarn" aria-label="Permalink to &quot;yarn&quot;">​</a></h1><p>yarn解决了npm的一些缺陷！</p><h2 id="yarn-安装" tabindex="-1">yarn 安装 <a class="header-anchor" href="#yarn-安装" aria-label="Permalink to &quot;yarn 安装&quot;">​</a></h2><p>在有了npm的基础上这个就很简单了</p><ul><li>使用<code>npm</code>安装<code>npm install -g yarn</code> 查看版本：<code>yarn --version</code></li></ul><p><strong>淘宝源安装</strong>：</p><p>分别运行一下两行命令：</p><ul><li><code>yarn config set registry https://registry.npm.taobao.org -g</code></li><li><code> yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g</code></li></ul><p><strong>成功提示</strong>：<code>success Set &quot;registry&quot; to &quot;https://registry.npm.taobao.org&quot;.</code></p><h2 id="yarn的基本使用" tabindex="-1">yarn的基本使用 <a class="header-anchor" href="#yarn的基本使用" aria-label="Permalink to &quot;yarn的基本使用&quot;">​</a></h2><ul><li><p><code> yarn init</code>：初始化项目 同<code>npm init</code>，执行输入信息后，会生成<code>package.json</code>文件</p></li><li><p><code>yarn install </code>：安装<code>package.json</code>里所有包，并将包及它的所有依赖项保存进<code>yarn.lock</code></p></li><li><p><code>yarn install --flat</code>：安装一个包的单一版本</p></li><li><p><code>yarn install --force</code> ：强制重新下载所有包</p></li><li><p><code>yarn install --production</code>：只安装<code>dependencies</code>里的包</p></li><li><p><code>yarn install --no-lockfile</code>：不读取或生成<code>yarn.lock</code></p></li><li><p><code>yarn install --pure-lockfile</code>：不生成<code>yarn.lock</code></p></li><li><p><code>yarn add [package]</code>： 在当前的项目中添加一个依赖包，会自动更新到<code>package.json</code>和<code>yarn.lock</code>文件中</p></li><li><p><code>yarn add [package]@[version]</code>：安装指定版本，这里指的是主要版本，如果需要精确到小版本，使用-E参数</p></li><li><p><code>yarn add [package]@[tag]</code> ：安装某个tag（比如beta,next或者latest）</p></li><li><p><code>yarn add --dev/-D</code>： 加到 <code>devDependencies</code></p></li><li><p><code>yarn add --peer/-P</code> ：加到 <code>peerDependencies</code></p></li><li><p><code>yarn add --optional/-O </code> ：加到 <code>optionalDependencies</code></p></li></ul><h2 id="yarn的优点" tabindex="-1">yarn的优点 <a class="header-anchor" href="#yarn的优点" aria-label="Permalink to &quot;yarn的优点&quot;">​</a></h2><ol><li>速度快</li><li>安装版本统一</li><li>更简洁的输出</li><li>多注册来源处理</li><li>更好的语义化</li></ol>',34),p=[n];function l(i,t,r,s,m,u){return d(),o("div",null,p)}const y=e(c,[["render",l]]);export{h as __pageData,y as default};
