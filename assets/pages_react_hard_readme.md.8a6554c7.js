import{_ as e,c as a,o as l,U as i}from"./chunks/framework.4d5e0f31.js";const m=JSON.parse('{"title":"专栏介绍","description":"","frontmatter":{},"headers":[],"relativePath":"pages/react/hard/readme.md","lastUpdated":1687008332000}'),t={name:"pages/react/hard/readme.md"},r=i('<h1 id="专栏介绍" tabindex="-1">专栏介绍 <a class="header-anchor" href="#专栏介绍" aria-label="Permalink to &quot;专栏介绍&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>Hello，大家好，我是小丞同学！半年时间，带来了一个新的专栏：React 源码解析<br>这段时间，一直在深入 React 源码学习，学习了卡颂老师的 <a href="https://react.iamkasong.com/" target="_blank" rel="noreferrer">React 技术揭秘</a>、外星人老师的 <a href="https://juejin.cn/book/6945998773818490884" target="_blank" rel="noreferrer">React 进阶实践指南小册</a>等优秀的博文。最终结合自己的理解和思考，写下了这个专栏，希望我的理解能够为你的源码学习之路带来一定的启发。<br>文中内容如有错误之处，欢迎指出，我们共同成长，一起进步。</p><h2 id="文章列表" tabindex="-1">文章列表 <a class="header-anchor" href="#文章列表" aria-label="Permalink to &quot;文章列表&quot;">​</a></h2><h3 id="一、react-哲学" tabindex="-1">一、React 哲学 <a class="header-anchor" href="#一、react-哲学" aria-label="Permalink to &quot;一、React 哲学&quot;">​</a></h3><ul><li>✅ React 设计理念</li><li>✅ React Fiber 架构</li></ul><h3 id="二、render-阶段" tabindex="-1">二、Render 阶段 <a class="header-anchor" href="#二、render-阶段" aria-label="Permalink to &quot;二、Render 阶段&quot;">​</a></h3><ul><li>✅ Render 阶段 -- beginWork</li><li>✅ Render 阶段 -- completeWork</li></ul><h3 id="三、commit-阶段" tabindex="-1">三、Commit 阶段 <a class="header-anchor" href="#三、commit-阶段" aria-label="Permalink to &quot;三、Commit 阶段&quot;">​</a></h3><ul><li>✅ 流程概览</li><li>✅ Before Mutation 阶段</li><li>✅ Mutation 阶段</li><li>✅ Layout 阶段</li></ul><h3 id="四、diff-算法" tabindex="-1">四、Diff 算法 <a class="header-anchor" href="#四、diff-算法" aria-label="Permalink to &quot;四、Diff 算法&quot;">​</a></h3><ul><li>✅ Diff 算法概览</li><li>✅ 单一节点的 Diff</li><li>✅ 多节点的 Diff</li></ul><h3 id="五、状态更新" tabindex="-1">五、状态更新 <a class="header-anchor" href="#五、状态更新" aria-label="Permalink to &quot;五、状态更新&quot;">​</a></h3><ul><li>✅ 状态更新流程概览</li><li>✅ 优先级更新</li><li>✅ 状态更新调度源码解析</li></ul><h3 id="六、scheduler-模块" tabindex="-1">六、Scheduler 模块 <a class="header-anchor" href="#六、scheduler-模块" aria-label="Permalink to &quot;六、Scheduler 模块&quot;">​</a></h3><ul><li>✅ Scheduler 实现原理</li><li>✅ Scheduler 源码解析</li></ul><h3 id="七、hooks-实现" tabindex="-1">七、Hooks 实现 <a class="header-anchor" href="#七、hooks-实现" aria-label="Permalink to &quot;七、Hooks 实现&quot;">​</a></h3><ul><li>✅ Hooks 实现原理</li><li>✅ useState 源码解读</li><li>✅ useReducer 源码解读</li><li>✅ useContext 源码解读</li><li>✅ useLayoutEffect 源码解读</li><li>✅ useEffect 源码解读</li><li>✅ useRef 源码解读</li><li>✅ useMemo &amp; useCallback 源码解读</li><li>✅ useTransition 源码解读</li><li>✅ useId 源码解读</li></ul><h3 id="八、事件系统" tabindex="-1">八、事件系统 <a class="header-anchor" href="#八、事件系统" aria-label="Permalink to &quot;八、事件系统&quot;">​</a></h3><ul><li>🖍 React 事件原理</li><li>🖍 源码解读</li></ul><h3 id="九、context-状态管理" tabindex="-1">九、Context 状态管理 <a class="header-anchor" href="#九、context-状态管理" aria-label="Permalink to &quot;九、Context 状态管理&quot;">​</a></h3><ul><li>🖍 Context 实现原理</li><li>🖍 Context 源码解析</li></ul><h3 id="十、未完待续" tabindex="-1">十、未完待续 <a class="header-anchor" href="#十、未完待续" aria-label="Permalink to &quot;十、未完待续&quot;">​</a></h3><ul><li>🖍 React Redux 实现原理</li><li>🖍 React Mobx 实现原理</li><li>🖍 React Router 实现原理</li><li>🖍 ....</li></ul><h2 id="后续" tabindex="-1">后续 <a class="header-anchor" href="#后续" aria-label="Permalink to &quot;后续&quot;">​</a></h2><p>以上就是本专栏的文章更新目录，会同步更新，欢迎大家关注<br>如对文章内容有异议，欢迎讨论～</p>',26),o=[r];function h(n,c,d,u,s,f){return l(),a("div",null,o)}const _=e(t,[["render",h]]);export{m as __pageData,_ as default};
