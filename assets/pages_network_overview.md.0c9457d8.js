import{_ as t,c as r,o,U as s}from"./chunks/framework.4d5e0f31.js";const a="/assets/overview-summary.75d25ef0.png",l="/assets/overview-1.e3e920cf.png",e="/assets/overview-graph-1.65572c65.png",i="/assets/overview-2.7a20ae9c.png",n="/assets/overview-e2e.a4e34ddf.png",p="/assets/overview-osi.5d5f4bae.png",g="/assets/overview-osi-tcp-5.aedb119a.png",h="/assets/overview-tcp.790c5f8b.png",k=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"pages/network/overview.md","lastUpdated":1682694591000}'),d={name:"pages/network/overview.md"},c=s('<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><p><img src="'+a+'" alt="overview-summary" data-fancybox="gallery"></p><h2 id="计算机网络的概念" tabindex="-1">计算机网络的概念 <a class="header-anchor" href="#计算机网络的概念" aria-label="Permalink to &quot;计算机网络的概念&quot;">​</a></h2><p>计算机网络：是一个将分散的、具有独立功能的<strong>计算机系统</strong>，通过<strong>通信设备</strong>与<strong>线路</strong>连接起来，由功能完善的<strong>软件</strong>实现资源共享和信息传递的系统。</p><p><img src="'+l+'" alt="" data-fancybox="gallery"></p><p>这里需要注意的是，按分布范围，计算机网络里有<strong>局域网</strong> LAN 和<strong>广域网</strong> WAN, 其中局域网的代表以太网，以及这两种网络最重要的区分点， <strong>局域网</strong>基于<strong>广播技术</strong>，<strong>广域网</strong>基于<strong>分组交换</strong>技术。</p><h2 id="计算机网络性能的衡量指标" tabindex="-1">计算机网络性能的衡量指标 <a class="header-anchor" href="#计算机网络性能的衡量指标" aria-label="Permalink to &quot;计算机网络性能的衡量指标&quot;">​</a></h2><p><img src="'+e+`" alt="overview-graph-1" data-fancybox="gallery"></p><h3 id="速率" tabindex="-1">速率 <a class="header-anchor" href="#速率" aria-label="Permalink to &quot;速率&quot;">​</a></h3><p>定义：连接在计算机网络上的主机在数字信道上<strong>传送数据位数的速率</strong></p><p>单位: <strong>b/s, Kb/s, Mb/s, Tb/s</strong></p><p>如果用字节表示，则是 <strong>B/s, KB/s, MB/s, TB/s</strong></p><p>大写 B 是字节，小写是 b 是比特</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> Byte </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> 8Bit</span></span>
<span class="line"></span></code></pre></div><h3 id="带宽" tabindex="-1">带宽 <a class="header-anchor" href="#带宽" aria-label="Permalink to &quot;带宽&quot;">​</a></h3><p>带宽原本指某个信号<strong>具有的频带宽度</strong>，即最高频率与最低频率之差，单位是赫兹（Hz）</p><p>计算机网络中，带宽用来表示网络的通信线路<strong>传送数据的能力</strong>，通常是指单位时间内从网络中的某一点到另一点所能通过的“最高数据率”</p><p>单位：“比特每秒”，b/s, kb/s, Mb/s, Gb/s</p><p>也可以说是网络设备所支持的最高速度</p><p>比如说你家的电信网络是 100兆 比特，意思是，一秒内最大的传输速率是 100兆 比特。</p><h3 id="吞吐量" tabindex="-1">吞吐量 <a class="header-anchor" href="#吞吐量" aria-label="Permalink to &quot;吞吐量&quot;">​</a></h3><p>表示在<strong>单位时间内通过某个网络（或信道、接口）的数据量</strong>。单位是b/s, kb/s, Mb/s等</p><p>吞吐量受网络的<strong>带宽或网络的额定速率</strong>的限制</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>吞吐量是一个或多个设备的综合速率，比如说 1000m 宽带的路由器连着三部手机，每部手机都是 10mb/s 上网， 那么速率就是 10mb/s，带宽是宽带的 1000m，路由器吞吐量是 30mb/s，即三者之和</p></div><h3 id="时延" tabindex="-1">时延 <a class="header-anchor" href="#时延" aria-label="Permalink to &quot;时延&quot;">​</a></h3><p>时延是指数据（报文/分组/比特流）从网络（或链路）的<strong>一端传送到另一端所需的时间</strong>。</p><p>时延包括四大类</p><table><thead><tr><th>名称</th><th>描述</th><th>计算公式</th></tr></thead><tbody><tr><td>发送时延</td><td>数据<strong>从主机到信道上</strong>所用的时间</td><td>发送的数据长度/发送速率</td></tr><tr><td>传播时延</td><td>数据<strong>在信道上</strong>传播所花费的时间</td><td>信道长度/电磁波在信道上传播的速率</td></tr><tr><td>排队时延</td><td>数据在路由器前<strong>等待前面数据处理</strong>的时间，取决于网络当前的通信量。</td><td>-</td></tr><tr><td>处理时延</td><td>数据<strong>在路由器中</strong>收到分组时进行处理需求的时间</td><td>-</td></tr></tbody></table><p>使用高速链路(提高网速)，<strong>只能减小发送时延</strong>，无法减少其他三个时延</p><p><img src="`+i+'" alt="" data-fancybox="gallery"></p><h3 id="时延带宽积" tabindex="-1">时延带宽积 <a class="header-anchor" href="#时延带宽积" aria-label="Permalink to &quot;时延带宽积&quot;">​</a></h3><p>公式：时延带宽积 = 传播时延 x 带宽</p><p>意思是链路上一共有多少比特的数据</p><h3 id="往返时延rtt" tabindex="-1">往返时延RTT <a class="header-anchor" href="#往返时延rtt" aria-label="Permalink to &quot;往返时延RTT&quot;">​</a></h3><p>发送端<strong>发送数据开始</strong>，到发送端收到来自<strong>接收端的确认</strong>（接收端收到数据后便立即发送确认），总共经历的时延</p><p>RTT越大，在收到<strong>确认之前，可以发送的数据越多</strong>。</p><blockquote><p>因为时延大了，这段时间就长了，能发的数据自然就多了</p></blockquote><p>RTT包括：</p><ul><li>往返传播时延 = <strong>传播时延 * 2</strong></li><li>末端处理时间</li></ul><h3 id="利用率" tabindex="-1">利用率 <a class="header-anchor" href="#利用率" aria-label="Permalink to &quot;利用率&quot;">​</a></h3><p>信道利用率 = 有数据通过时间 / 有+无数据通过时间</p><p>网络利用率 = 所有信道利用率加权求平均值</p><h2 id="分层结构" tabindex="-1">分层结构 <a class="header-anchor" href="#分层结构" aria-label="Permalink to &quot;分层结构&quot;">​</a></h2><h3 id="为什么要分层-分层要做什么" tabindex="-1">为什么要分层？分层要做什么？ <a class="header-anchor" href="#为什么要分层-分层要做什么" aria-label="Permalink to &quot;为什么要分层？分层要做什么？&quot;">​</a></h3><ul><li>发起通信的计算机必须将数据通信的通路<strong>进行激活</strong>。</li><li>要告诉网络<strong>如何识别</strong>目的主机。</li><li>发起通信的计算机要查明目的主机<strong>是否开机</strong>，并且与网络连接正常。</li><li>发起通信的计算机要弄清楚，对方计算机中文件管理程序<strong>是否已经做好准备工作</strong>。</li><li>确保差错和意外可以解决。</li></ul><h3 id="分层的基本原则" tabindex="-1">分层的基本原则 <a class="header-anchor" href="#分层的基本原则" aria-label="Permalink to &quot;分层的基本原则&quot;">​</a></h3><ol><li>各层之间<strong>相互独立</strong>，每层只实现一种相对独立的功能</li><li>每层之间<strong>界面自然清晰</strong>，易于理解，相互交流尽可能少</li><li>结构上可分割开。每层都采用最合适的技术来实现</li><li>保持下层对上层的独立性，上层单向使用下层提供的服务</li><li>整个分层结构应该能促进标准化工作</li></ol><h3 id="概念总结" tabindex="-1">概念总结 <a class="header-anchor" href="#概念总结" aria-label="Permalink to &quot;概念总结&quot;">​</a></h3><ul><li>网络体系结构是从<strong>功能上</strong>描述计算机网络结构</li><li>计算机网络体系结构简称网络体系结构是<strong>分层结构</strong></li><li>每层遵循某个/些<strong>网络协议</strong>以完成本层功能</li><li><strong>计算机网络体系结构</strong>是计算机网络的<strong>各层及其协议</strong>的集合</li><li>第 n 层在向 n+1 层提供服务时，此服务不仅包含第 n 层本身的功能，还包含由下层服务提供的功能。</li><li>仅仅在<strong>相邻层间有接口</strong>，且所提供服务的具体实现细节对上一层完全屏蔽。</li><li>体系结构是抽象的，而实现是指能运行的一些软件和硬件</li></ul><h2 id="osi-参考模型" tabindex="-1">OSI 参考模型 <a class="header-anchor" href="#osi-参考模型" aria-label="Permalink to &quot;OSI 参考模型&quot;">​</a></h2><p><img src="'+n+'" alt="overview-e2e" data-fancybox="gallery"></p><ul><li>网络层、传输层、回话层、表示层、应用层，每一层都要对上一层发送的数据<strong>进行处理</strong>（加个头部）</li><li>数据链路层不仅需要加头部，还<strong>需要加尾部</strong></li><li>物理层什么都不加，<strong>只管发送数据</strong>（比特流）</li></ul><p><img src="'+p+'" alt="overview-osi" data-fancybox="gallery"></p><h3 id="应用层" tabindex="-1">应用层 <a class="header-anchor" href="#应用层" aria-label="Permalink to &quot;应用层&quot;">​</a></h3><p>用户与网络的界面，<strong>所有能和用户交互产生网络流量的程序</strong></p><p>典型应用层服务：文件传输(FTP)、电子邮件(SMTP)、万维网(HTTP)...</p><h3 id="表示层" tabindex="-1">表示层 <a class="header-anchor" href="#表示层" aria-label="Permalink to &quot;表示层&quot;">​</a></h3><p>用于处理在两个通信系统中交换信息的表示方式（语法和语义）</p><ul><li>功能一：数据格式变换</li><li>功能二：数据加密解密</li><li>功能三：数据压缩和恢复</li></ul><h3 id="会话层" tabindex="-1">会话层 <a class="header-anchor" href="#会话层" aria-label="Permalink to &quot;会话层&quot;">​</a></h3><p>向表示层实体/用户进程提供<strong>建立连接</strong>并在连接上<strong>有序地传输</strong>数据，这是会话，也是<strong>建立同步</strong>（SYN）</p><ul><li>功能一：建立、管理、终止会话</li><li>功能二：使用校验点可使会话在通信失效时从<strong>校验点/同步点</strong>继续恢复通信，实现数据同步</li></ul><p>适用于传输大文件，就是在传输失败的时候，可以直接从校验点继续传输</p><h3 id="传输层" tabindex="-1">传输层 <a class="header-anchor" href="#传输层" aria-label="Permalink to &quot;传输层&quot;">​</a></h3><p>负责主机中两个进程的通信，即端到端的通信。传输单位是报文段或用户数据报。</p><ul><li>功能一：可靠传输、不可靠传输</li><li>功能二：差错控制</li><li>功能三：流量控制</li><li>功能四：复用分用</li></ul><p>复用：多个应用层进程可同时使用下面运输层的服务</p><p>分用：运输层把收到的信息分别交付给上面应用层中相应的进程</p><h3 id="网络层" tabindex="-1">网络层 <a class="header-anchor" href="#网络层" aria-label="Permalink to &quot;网络层&quot;">​</a></h3><p>主要任务是把<strong>分组</strong>从源端传到目的端，为分组交换网上的不同主机提供通信服务。 网络层传输单位是<strong>数据报</strong>。</p><ul><li>功能一：路由选择</li><li>功能二：流量控制</li><li>功能三：差错控制</li><li>功能四：拥塞控制</li></ul><p>若所有结点都来不及接受分组，而要丢弃大量分组的话，网络就处于<strong>拥塞状态</strong>，因此要采取一定措施，缓解这种拥塞。</p><h3 id="数据链路层" tabindex="-1">数据链路层 <a class="header-anchor" href="#数据链路层" aria-label="Permalink to &quot;数据链路层&quot;">​</a></h3><p>主要任务是<strong>把网络层传下来的数据报组装成帧</strong>。 数据链路层/链路层的传输单位是帧</p><ul><li>功能一：成帧（定义帧的开始和结束）</li><li>功能二：差错控制 <strong>帧错+位错</strong></li><li>功能三：流量控制</li><li>功能四：访问（接入）控制 控制对信道的访问</li></ul><h3 id="物理层" tabindex="-1">物理层 <a class="header-anchor" href="#物理层" aria-label="Permalink to &quot;物理层&quot;">​</a></h3><p>主要任务是在<strong>物理媒体</strong>上实现比特流的<strong>透明传输</strong></p><p>物理层传输单位是比特</p><p>透明传输：指不管所传数据是什么样的比特组合，都应当能够在链路上传送。</p><ul><li>功能一：定义接口特性</li><li>功能二：定义传输模式 单工、半双工、双工</li><li>功能三：定义传输速率</li><li>功能四：比特同步</li><li>功能五：比特编码</li></ul><h2 id="五层协议" tabindex="-1">五层协议 <a class="header-anchor" href="#五层协议" aria-label="Permalink to &quot;五层协议&quot;">​</a></h2><p><img src="'+g+'" alt="overview-osi-tcp-5" data-fancybox="gallery"></p><ul><li><p>应用层 ：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等协议。数据单位为报文。</p></li><li><p>传输层 ：为进程提供通用数据传输服务。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议 TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议 UDP，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供及时性服务。</p></li><li><p>网络层 ：为主机提供数据传输服务。而传输层协议是为主机中的进程提供数据传输服务。网络层把传输层传递下来的报文段或者用户数据报封装成分组。</p></li><li><p>数据链路层 ：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。</p></li><li><p>物理层 ：考虑的是怎样在传输媒体上传输数据比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异。</p></li></ul><h2 id="tcp-ip-参考模型" tabindex="-1">TCP / IP 参考模型 <a class="header-anchor" href="#tcp-ip-参考模型" aria-label="Permalink to &quot;TCP / IP 参考模型&quot;">​</a></h2><p><img src="'+h+'" alt="overview-tcp" data-fancybox="gallery"></p><p>它只有四层，相当于五层协议中数据链路层和物理层合并为网络接口层。</p><p>TCP/IP 体系结构不严格遵循 OSI 分层概念，应用层可能会直接使用 IP 层或者网络接口层。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p><img src="'+a+'" alt="overview-summary" data-fancybox="gallery"></p>',89),b=[c];function u(m,q,f,P,_,v){return o(),r("div",null,b)}const y=t(d,[["render",u]]);export{k as __pageData,y as default};
