import{_ as s,c as a,o as n,U as p}from"./chunks/framework.4d5e0f31.js";const d=JSON.parse('{"title":"React 入门学习（十三）-- antd 的基本使用","description":"在我们学习JavaScript 的时候，我们学习了一个 bootstrap 的组件库。可以让我们快速开发，在 react 世界中同样有着类似功能的 antd 组件库","frontmatter":{"title":"React 入门学习（十三）-- antd 的基本使用","date":"2021-09-07T16:30:33.000Z","id":1635582633,"tags":["react","antDesign"],"categories":["React入门学习"],"keywords":"react,antDesign,小丞","description":"在我们学习JavaScript 的时候，我们学习了一个 bootstrap 的组件库。可以让我们快速开发，在 react 世界中同样有着类似功能的 antd 组件库"},"headers":[],"relativePath":"pages/react/primary/antd.md","lastUpdated":1687081992000}'),o={name:"pages/react/primary/antd.md"},l=p(`<p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/antd.gif" alt="antd" data-fancybox="gallery"></p><blockquote><p>📢 大家好，我是小丞同学，一名<strong>大二的前端爱好者</strong></p><p>📢 这篇文章是学习 React 中 React antd组件库的学习笔记</p><p>📢 非常感谢你的阅读，不对的地方欢迎指正 🙏</p><p>📢 <strong>愿你忠于自己，热爱生活</strong></p></blockquote><h2 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">​</a></h2><p>在我们学习<code> JavaScript</code> 的时候，我们学习了一个 <code>bootstrap</code> 的组件库。可以让我们快速开发，但是我们现在学习了 React ，一种组件化编程方式，很少说会去贴大量的 HTML 代码，再配一下 CSS，JS。我们也有一些现成的组件库可以使用，我们只需要写一个组件标签即可调用。这让我们 React 开发变得十分的快速，方便和整洁。</p><p>我们这里学习的是 <code>Ant-design</code> （应该是这样），它有很多的组件供我们使用</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/image-20210907180731157.png" alt="image-20210907180731157" data-fancybox="gallery"></p><p>按钮，日历，这些都是非常常用的组件，我们一起看看如何使用吧</p><h2 id="_1-antd-组件基本使用" tabindex="-1">1. Antd 组件基本使用 <a class="header-anchor" href="#_1-antd-组件基本使用" aria-label="Permalink to &quot;1. Antd 组件基本使用&quot;">​</a></h2><p>使用 <code>Antd</code> 组件非常的简单</p><p>引包 ----- 暴露 ---- 使用</p><p>首先我们通过组件库来实现一个简单的按钮</p><h4 id="第一步" tabindex="-1">第一步 <a class="header-anchor" href="#第一步" aria-label="Permalink to &quot;第一步&quot;">​</a></h4><p>安装并引入 <code>antd</code> 包</p><p>使用命令下载这个组件库</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">antd</span></span>
<span class="line"></span></code></pre></div><p>在我们需要使用的文件下引入，我这里是在 <code>App.jsx</code> 内引入</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Button</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">antd</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>在引入的同时，暴露出要使用的组件名 <code>Button</code></p><p>推荐去<a href="https://ant.design/components/button-cn/" target="_blank" rel="noreferrer">官方文档</a>查看，都会有代码解释</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/image-20210907181354552.png" alt="image-20210907181354552" data-fancybox="gallery"></p><p>现在我们可以在 App 中使用 <code>Button</code> 组件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    App..</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">primary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Primary Button</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Default Button</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dashed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Dashed Button</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">br</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Text Button</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Link Button</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>我这里使用了几种按钮</p><p>但是就这样你会发现按钮少了样式</p><p>我们还需要引入 <code>antd</code> 的 CSS 文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/node_modules/antd/dist/antd.less</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>可以在 <code>node_modules</code> 文件中的 <code>antd</code> 目录下的 <code>dist</code> 文件夹中找到相应的样式文件，引入即可</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/image-20210907181854774.png" alt="image-20210907181854774" data-fancybox="gallery"></p><p>即可成功引入 <code>antd</code> 组件</p><h2 id="_2-自定义主题颜色" tabindex="-1">2. 自定义主题颜色 <a class="header-anchor" href="#_2-自定义主题颜色" aria-label="Permalink to &quot;2. 自定义主题颜色&quot;">​</a></h2><p>由于这些组件采用的颜色，都是支付宝蓝，有时候我们不想要这样的颜色，想要用其他的配色，这当然是可以实现的，我们需要引用一些库和更改一些配置文件来实现</p><p>在视频中，老师讲解的是 <code>3.几</code> 版本中的实现方法，这种方法需要去暴露 React 中的配置文件，这种操作是不可返回的，一旦暴露就不可回收。我觉得这不是一个好方法~</p><p>在 <code>antd</code> 最新版中，引入了 <code>craco</code> 库，我们可以使用 <code>craco</code> 来实现自定义的效果</p><p>首先我们需要安装 <code>craco</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@craco/craco</span></span>
<span class="line"></span></code></pre></div><p>同时我们需要更改 <code>package.json</code> 中的启动文件</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">craco start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">craco build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">craco test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">eject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react-scripts eject</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"></span></code></pre></div><p>更改成 <code>craco</code> 执行</p><p>接下来我们需要在根目录下新建一个 <code>craco.config.js</code> 文件，用于配置自定义内容</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> CracoLessPlugin </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">craco-less</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">plugin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> CracoLessPlugin</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">lessLoaderOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">lessOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">modifyVars</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">@primary-color</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">skyblue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">javascriptEnabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>其实它就是用来操作 <code>less</code> 文件的全局颜色</p><p>简单的说，<code>antd</code> 组件是采用 <code>less</code> 编写的，我们需要通过重新配置的方式去更改它的值</p><p>同时我们需要将我们先前的 <code>App.css</code> 文件更改为 <code>App.less</code> 文件，在当中引入我们的 <code>less</code> 文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/node_modules/antd/dist/antd.less</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>注意一定要添加<strong>分号结尾</strong>，这是一个非常容易犯的错误</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/image-20210907200116517.png" alt="image-20210907200116517" data-fancybox="gallery"></p><p>可见，我们成功的将主题色修改成了红色</p><blockquote><p>antd ui组件库就记这么多，还有样式的按需引入没有记录，不太喜好暴露 React 配置文件...</p></blockquote>`,48),t=[l];function e(c,r,D,y,F,i){return n(),a("div",null,t)}const A=s(o,[["render",e]]);export{d as __pageData,A as default};
