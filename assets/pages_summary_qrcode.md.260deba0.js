import{_ as s,c as a,o as n,V as l}from"./chunks/framework.3d11d069.js";const i=JSON.parse('{"title":"如何优雅的在 H5 网页中实现扫码功能","description":"","frontmatter":{},"headers":[],"relativePath":"pages/summary/qrcode.md","filePath":"pages/summary/qrcode.md","lastUpdated":1687597535000}'),o={name:"pages/summary/qrcode.md"},p=l(`<h1 id="如何优雅的在-h5-网页中实现扫码功能" tabindex="-1">如何优雅的在 H5 网页中实现扫码功能 <a class="header-anchor" href="#如何优雅的在-h5-网页中实现扫码功能" aria-label="Permalink to &quot;如何优雅的在 H5 网页中实现扫码功能&quot;">​</a></h1><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211130114038729.png" alt="image-20211130114038729" data-fancybox="gallery"></p><blockquote><p>📢 大家好，我是小丞同学，一名<strong>大二的前端爱好者</strong></p><p>📢 这篇文章将来讲讲如何在微信公众号页面中接入官方扫码 SDK</p><p>📢 非常感谢你的阅读，不对的地方欢迎指正 🙏</p><p>📢 <strong>愿你忠于自己，热爱生活</strong></p></blockquote><p>最近在做的项目中需要实现一个<strong>扫码录入</strong>的功能，具体效果就是在点击扫码按钮后调取摄像头，扫描条形码将解码后的数据填入到输入框中。相信这个功能在日常的手机使用中，是非常常用的，下面来看看我是如何一步一步<s>踩坑</s><strong>实现</strong>的吧</p><h2 id="💡-内容抢先看" tabindex="-1">💡 内容抢先看 <a class="header-anchor" href="#💡-内容抢先看" aria-label="Permalink to &quot;💡 内容抢先看&quot;">​</a></h2><ol><li>采用 <code>Quagga</code> 库实现遇到的问题和瓶颈</li><li>接入微信 SDK 的踩坑指北</li><li>最终解决方案</li></ol><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/%E5%AE%9E%E7%8E%B0%E6%89%AB%E7%A0%81.png" alt="实现扫码" data-fancybox="gallery"></p><h2 id="一、扫码初探-quagga" tabindex="-1">一、扫码初探 Quagga <a class="header-anchor" href="#一、扫码初探-quagga" aria-label="Permalink to &quot;一、扫码初探 Quagga&quot;">​</a></h2><p>第一次接触到扫码的业务，一切都是全新的，也不知道从哪里开始，先到各个社区搜索了一下</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211130121124068.png" alt="image-20211130121124068" data-fancybox="gallery"></p><p>当时的搜索词大概是这样，得到结果就是利用 <code>HTML5</code> 中提供的 <code>API</code> 去实现，然后又看到了 <code>Quagga</code>，<code>barCode</code> 等库，在 <code>npm</code> 上查看了官方描述后，我觉得 <code>Quagga</code> 这个库可能更符合这个项目的需求，因此对 <code>Quagga</code> 进行了一番研究 <a href="https://www.npmjs.com/package/quagga" target="_blank" rel="noreferrer">Quagga</a></p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211130121818613.png" alt="image-20211130121818613" data-fancybox="gallery"></p><p>这个库的使用并不难，首先需要引入 <code>Quagga</code> 这个库</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quagga</span></span></code></pre></div><p>由于我是在 <code>React</code> 项目下开发的，因此我们需要在 <code>return</code> 的 <code>JSX</code> 内 添加一个 <code>DOM</code> 节点，用来定制摄像头打开摄像头影像的投放区域</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211130122444485.png" alt="image-20211130122444485" data-fancybox="gallery"></p><p>代码中的 <code>yourElement</code> 节点就是用来做摄像头的影像投放的</p><p>接下来，需要开始使用 <code>Quagga</code> ，大概就是调一下方法，配置一下解码方式，扫码区域，然后就能唤起摄像头，进行扫码，再处理一下扫码结果。由于初学，对它具体的代码书写还不是很熟悉，因此看老外敲了一晚的代码，并在一个大佬的 <code>github</code> 仓库内，找到了一个开源的扫码录入项目 👇👇👇</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211130122823986.png" alt="image-20211130122823986" data-fancybox="gallery"></p><p>看了看它的实现代码，然后开始了我的踩坑</p><p>首先我们需要初始化 <code>Quagga</code></p><p>需要定制一下我们的解码方式，对于我们需要扫描的码是什么类型的，可以找个检测网站测一下，我的是 <code>Code39</code> 类型的</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Quagga</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">inputStream</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Live</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">LiveStream</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 方式</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">constraints</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">790</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">490</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 解码区域</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">numberOfWorkers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hardwareConcurrency</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#barcodeScan</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 影像输出到的节点</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">locate</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">decoder</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">readers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code_39_reader</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#676E95;font-style:italic;">// 解码方式</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Quagga</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#F07178;">() </span><span style="color:#676E95;font-style:italic;">// 开启</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">Quagga</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onDetected</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">onDetect)</span></span></code></pre></div><p>当成功扫码后会调用 <code>onDetected</code> 方法，这就有点像生命周期一样，都是定义好的，我们可以在这个函数里接收到返回来的 <code>result</code> 获取到 <code>codeResult</code> 扫描结果</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">onDetect</span><span style="color:#A6ACCD;">(res)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// console.log(res.codeResult.code)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Quagga</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stop</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Quagga</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">offProcessed</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">codeResult</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>然后我们就可以开始疯狂的扫码，测试，经过了一晚上的测试，我发现它并不能像别人视频中那样流畅准确的进行解码，基本上输出的结果没几个是对的上的，因此此路行不通，开始萌生了放弃的想法，后来发现可以直接调取微信的扫码功能，来实现我们的需求，因此开始了微信 SDK 踩坑之路</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211130123646800.png" alt="image-20211130123646800" data-fancybox="gallery"></p><h2 id="二、大战微信-sdk" tabindex="-1">二、大战微信 SDK <a class="header-anchor" href="#二、大战微信-sdk" aria-label="Permalink to &quot;二、大战微信 SDK&quot;">​</a></h2><p>在经历了 <code>quagga</code> 的失利后，开始了捣鼓接入微信 <code>SDK</code> 来实现，</p><p>首先我们需要引入 <code>weixin-js-sdk</code> ，这样我们就可以使用一些 <code>wx</code> 官方 <code>API</code>，比如这里需要使用到 <code>scanQRcode</code></p><p>在这里我们调用这个 <code>API</code>，它接收一个配置对象，具体可以看<a href="https://developers.weixin.qq.com/miniprogram/dev/api/device/scan/wx.scanCode.html" target="_blank" rel="noreferrer">官方文档</a></p><p>比较重要的就是 <code>needResult</code> 它决定扫码的结果由谁来处理，如果是 0 ，则由微信处理，例如扫取一个快递码，它在扫描结束后会跳转到对应的页面去，这不是我们想要的，因此设置为 1，会直接返回扫描的结果，我们可以在 <code>success</code> 回调中获取到这个结果 <code>resultStr</code> ，这个 <code>resultStr</code> 是一个数组，第一项是扫码的类型，第二项是解码后的值，因此我们处理一下</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">scanQRCode</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">needResult</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 默认为0，扫描结果由微信处理，1则直接返回扫描结果，</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">scanType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">qrCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">barCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 可以指定扫二维码还是一维码，默认二者都有</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">resultStr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)[</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 当needResult 为 1 时，扫码返回的结果</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">fail</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>这样我们一个简单的扫码功能就写好了，真是很方便，只需要绑定到事件处理回调即可被调用。真的是这么简单吗？</p><p>由于我们使用的是微信开放能力，我们需要进行配置，采用官方提供的 <code>wx.config</code></p><p>需要配置我们的 <code>appId</code>，以及一个签名还需要配置我们需要使用的 <code>API</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">config</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span>
<span class="line"><span style="color:#A6ACCD;">    appId</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 必填，公众号的唯一标识</span></span>
<span class="line"><span style="color:#A6ACCD;">    timestamp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 必填，生成签名的时间戳</span></span>
<span class="line"><span style="color:#A6ACCD;">    nonceStr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 必填，生成签名的随机串</span></span>
<span class="line"><span style="color:#A6ACCD;">    signature</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 必填，签名</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">jsApiList</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scanQRCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#676E95;font-style:italic;">// 必填，需要使用的JS接口列表</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>签名这些配置项，需要后台哥哥返回，我们需要向后端传递我们当前的 <code>url</code>，用来生成掐灭</p><p>注意：一定是需要动态的，写死了会有 <code>bug</code></p><p>这样我们调用接口，后端返回几个参数即可</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getWxKey</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>这里有几个需要注意的问题</p><ol><li>调取微信 <code>API</code> 需要使用 <code>access_token</code> 这个需要后端去获取，怎么解决我也不清楚，应该是通过 微信公众号的 <code>addId</code> 去申请的</li><li>向后端传递的 <code>url</code> ，是需要通过<strong>动态获取</strong>的，不然可能会有 <code>invalid signature</code> 签名错误的情况</li></ol><p>在代码层面上，我们能做的就是这些了，前端的代码逻辑没有很多，都是 <code>API</code> 调用，完整代码如下</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> openCamera </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getWxKey</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">appId</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timestamp</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">nonceStr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> jsKey</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">signature</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">config</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        debug</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">appId</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 必填，公众号的唯一标识</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">timestamp</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 必填，生成签名的时间戳</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">nonceStr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 必填，生成签名的随机串</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">signature</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 必填，签名</span></span>
<span class="line"><span style="color:#F07178;">        jsApiList</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scanQRCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">] </span><span style="color:#676E95;font-style:italic;">// 必填，需要使用的JS接口列表</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ready</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">scanQRCode</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            needResult</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 默认为0，扫描结果由微信处理，1则直接返回扫描结果，</span></span>
<span class="line"><span style="color:#F07178;">            scanType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">qrCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">barCode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 可以指定扫二维码还是一维码，默认二者都有</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">resultStr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)[</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 当needResult 为 1 时，扫码返回的结果</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#A6ACCD;">form</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setFieldsValue</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> orderNumber</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">fail</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>但是写到这里，我们的扫码功能仍然是不可用的，我们还需要在微信公众平台来配置我们的接口域名，不然得到的会是 👇👇👇</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/71e5dd759e7980b07e6e4a9567b07e8.jpg" alt="71e5dd759e7980b07e6e4a9567b07e8" data-fancybox="gallery"></p><p>我们需要在微信公众平台配置 <code>JS</code> 接口安全域名</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/imgs/image-20211130131801904.png" alt="image-20211130131801904" data-fancybox="gallery"></p><p>这样我们的问题就能迎刃而解，在配置安全域名的时候，注意访问的域名不要启动代理，不然会绑定不成功</p><hr><p>至此我们的需求得以完成，文章可能看起来很容易，但是实际操作起来会用很多各种各样的问题，希望这篇文章能够帮助到有类似需求的你</p><p>小tips：遇到问题的时候可以尝试在微信交流平台找答案，或者可以查看官方文档</p><blockquote><p>最后，可能在很多地方讲诉的不够清晰，请见谅</p><p>💌 如果文章有什么错误的地方，或者有什么疑问，欢迎留言，也欢迎私信交流</p></blockquote>`,54),e=[p];function c(t,r,y,F,D,A){return n(),a("div",null,e)}const d=s(o,[["render",c]]);export{i as __pageData,d as default};
