import{_ as e,c as l,o as a,V as s}from"./chunks/framework.3d11d069.js";const x=JSON.parse('{"title":"一文读懂CSS布局（二） -- flex布局","description":"一文读懂CSS布局（二） -- flex布局，图文详细解析，完整思维导图，flex布局这一篇就足够了","frontmatter":{"title":"一文读懂CSS布局（二） -- flex布局","date":"2021-05-22T01:49:03.000Z","id":1635662943,"photos":"https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex.png","tags":["css布局","flex"],"categories":["前端总结"],"keywords":"flex布局,CSS布局方式,小丞同学","description":"一文读懂CSS布局（二） -- flex布局，图文详细解析，完整思维导图，flex布局这一篇就足够了"},"headers":[],"relativePath":"pages/css/layout/flex.md","filePath":"pages/css/layout/flex.md","lastUpdated":1690034172000}'),o={name:"pages/css/layout/flex.md"},n=s(`<p>在我们上一篇CSS布局文章中详细的讲解了<strong>grid布局</strong>，这篇文章就带大家来学习一下flex布局！</p><p><strong>全文思维导图</strong>，建议收藏！</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex%E5%B8%83%E5%B1%80-1621697515086.png" alt="flex布局" data-fancybox="gallery"></p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>Flex布局，也叫&quot;弹性布局&quot;，用来为盒模型提供最大的灵活性。</p><p><strong>任何一个容器</strong>都可以指定为 Flex 布局。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>对于行内元素也可以使用<strong>行内flex布局</strong></p><p><code>注意</code>：这个点之前面试被面到过，可以留意一下</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inline-flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><strong>使用时应该注意些什么？</strong></p><ul><li>对于部分浏览器有兼容性问题，需要做兼容性处理。（==IE==：“你直接报我身份证算了”）</li><li>在父级元素设置为flex布局后，子元素的float、clear、vertical-align属性==都将失效==，所以在使用flex布局时，应当在分析页面结构时就考虑清楚，不应该先设置完子元素布局后再使用。</li></ul><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><p>和grid布局一样，有==容器==和==项目==两个概念，采用 Flex 布局的元素，称为 Flex 容器，简称为&quot;容器&quot;。它的所有子元素自动成为容器成员，称为 Flex 项目，简称为&quot;项目&quot;。</p><p><code>注意</code>：不同于grid布局，flex布局是一维布局方式，按行或者按列</p><blockquote><p>也就是父级元素采用flex布局，则父级元素为容器，全部子元素自动成为项目。</p></blockquote><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex.png" alt="flex" data-fancybox="gallery"></p><blockquote><p>在flex布局中还有很多细致的属性，都一一在图中有展示</p></blockquote><ol><li>水平的主轴（main axis）</li><li>垂直的交叉轴（cross axis）</li><li>主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end</li><li>交叉轴的开始位置叫做cross start，结束位置叫做cross end</li><li>单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size</li></ol><h2 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h2><p>容器属性顾名思义就是设置在==容器==身上的属性，一共有6个，下面来一一介绍</p><ul><li>也就是这一部分的属性全是设置在==容器盒子==身上的！</li></ul><h3 id="_1-flex-direction" tabindex="-1">1. flex-direction <a class="header-anchor" href="#_1-flex-direction" aria-label="Permalink to &quot;1. flex-direction&quot;">​</a></h3><ul><li><code>flex-direction</code>属性决定主轴的方向，也就是项目的排列方向</li></ul><p>有四个属性值<code>row | row-reverse | column | column-reverse</code></p><h5 id="测试代码" tabindex="-1">测试代码 <a class="header-anchor" href="#测试代码" aria-label="Permalink to &quot;测试代码&quot;">​</a></h5><p>对三个项目分别设置了不同的颜色</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">item item-1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">flex item1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">item item-2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">flex item2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">item item-3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">flex item3</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p><code>row</code>（默认值）：主轴为水平方向，起点在容器左端</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-row.png" alt="flex-row" data-fancybox="gallery"></p><p><code>row-reverse</code>：主轴为水平方向，起点在容器右端</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-row-reverse.png" alt="flex-row-reverse" data-fancybox="gallery"></p><p><code>column</code>：主轴为垂直方向，起点在容器上沿。</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-column.png" alt="flex-column" data-fancybox="gallery"></p><p><code>column-reverse</code>：主轴为垂直方向，起点在容器下沿。</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-column-reverse.png" alt="flex-column-reverse" data-fancybox="gallery"></p><h3 id="_2-flex-wrap" tabindex="-1">2. flex-wrap <a class="header-anchor" href="#_2-flex-wrap" aria-label="Permalink to &quot;2. flex-wrap&quot;">​</a></h3><ul><li><code>flex-wrap</code>属性用于设置当项目在容器中一行无法显示的时候如何处理。</li></ul><p>有三个属性值：<code>nowrap | wrap | wrap-reverse</code></p><ol><li><p><code>nowrap</code>（默认）：不换行</p></li><li><p><code>wrap</code>：换行，第一行==在上方==</p></li><li><p><code>wrap-reverse</code>：换行，第一行==在下方==</p></li></ol><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-wrap.png" alt="flex-wrap" data-fancybox="gallery"></p><h3 id="_3-flex-flow" tabindex="-1">3. flex-flow <a class="header-anchor" href="#_3-flex-flow" aria-label="Permalink to &quot;3. flex-flow&quot;">​</a></h3><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">flex-flow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;flex-direction&gt; || &lt;flex-wrap&gt;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>第一个属性是方向，第二个是是否换行</p><h3 id="_4-justify-content" tabindex="-1">4. justify-content <a class="header-anchor" href="#_4-justify-content" aria-label="Permalink to &quot;4. justify-content&quot;">​</a></h3><p><code>justify-content</code>属性定义项目在主轴上的对齐方式。</p><p>有5个属性值：<code>flex-start | flex-end | center | space-between | space-around</code></p><ul><li><code>flex-start</code>（默认值）：左对齐</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/justify-start.png" alt="justify-start" data-fancybox="gallery"></p><ul><li><code>flex-end</code>：右对齐</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/justify-end.png" alt="justify-end" data-fancybox="gallery"></p><ul><li><code>center</code>： 居中</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/justify-center.png" alt="justify-center" data-fancybox="gallery"></p><ul><li><code>space-between</code>：两端对齐，项目之间的间隔都相等</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/justify-between.png" alt="justify-between" data-fancybox="gallery"></p><ul><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/justify-around.png" alt="justify-around" data-fancybox="gallery"></p><h3 id="_5-align-items" tabindex="-1">5. align-items <a class="header-anchor" href="#_5-align-items" aria-label="Permalink to &quot;5. align-items&quot;">​</a></h3><p><code>align-items</code>属性定义项目在交叉轴上如何对齐</p><p>有5个属性值：<code>flex-start | flex-end | center | baseline | stretch</code></p><ul><li><p><code>flex-start</code>：交叉轴的起点对齐</p></li><li><p><code>flex-end</code>：交叉轴的终点对齐</p></li><li><p><code>center</code>：交叉轴的中点对齐</p></li><li><p><code>baseline</code>: 项目的第一行文字的基线对齐</p></li><li><p><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</p></li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/align-items.png" alt="align-items" data-fancybox="gallery"></p><h3 id="_6-align-content" tabindex="-1">6. align-content <a class="header-anchor" href="#_6-align-content" aria-label="Permalink to &quot;6. align-content&quot;">​</a></h3><p><code>align-content</code>属性定义了==多根轴线==的对齐方式。如果项目只有一根轴线，该属性不起作用</p><p>有6个属性值：<code>flex-start | flex-end | center | space-between | space-around | stretch</code></p><ul><li><code>flex-start</code>：与交叉轴的==起点对齐==</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/align-start.png" alt="align-start" data-fancybox="gallery"></p><ul><li><code>flex-end</code>：与交叉轴的==终点对齐==</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/align-end.png" alt="align-end" data-fancybox="gallery"></p><ul><li><code>center</code>：与交叉轴的中点对齐，也就是==垂直居中==</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/align-center.png" alt="align-center" data-fancybox="gallery"></p><ul><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔==平均分布==</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/align-between.png" alt="align-between" data-fancybox="gallery"></p><ul><li><code>space-around</code>：每根轴线==两侧的间隔都相等==。所以，轴线之间的间隔比轴线与边框的间隔大一倍</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/align-around.png" alt="align-around" data-fancybox="gallery"></p><ul><li><code>stretch</code>（默认值）：轴线占满整个交叉轴</li></ul><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/align-stretch.png" alt="align-stretch" data-fancybox="gallery"></p><h2 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-label="Permalink to &quot;项目属性&quot;">​</a></h2><p>项目属性就是写在项目身上的！用来设置项目</p><h3 id="_1-order" tabindex="-1">1. order <a class="header-anchor" href="#_1-order" aria-label="Permalink to &quot;1. order&quot;">​</a></h3><p><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，==默认值为0==。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">order</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> plum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/order.png" alt="order" data-fancybox="gallery"></p><p><code>item-2</code>设置了order为1，比1，3的order值要大，所以<code>item-2</code>会排到后面</p><h3 id="_2-flex-grow" tabindex="-1">2. flex-grow <a class="header-anchor" href="#_2-flex-grow" aria-label="Permalink to &quot;2. flex-grow&quot;">​</a></h3><p><code>flex-grow</code>属性定义项目的放大比例，默认为<code>0</code>，即如果==存在剩余空间，也不放大==。</p><p>当其中的一个项目设置了<code>flex-grow</code>为<code>1</code>时，它将占据剩余空间的100%</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">flex-grow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> pink</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-grow.png" alt="flex-grow" data-fancybox="gallery"></p><p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将==等分剩余空间==（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-grow2.png" alt="flex-grow2" data-fancybox="gallery"></p><h3 id="_3-flex-shrink" tabindex="-1">3. flex-shrink <a class="header-anchor" href="#_3-flex-shrink" aria-label="Permalink to &quot;3. flex-shrink&quot;">​</a></h3><p><code>flex-shrink</code>属性定义了项目的缩小比例，==默认为1==，即如果空间不足，该项目将缩小，和<code>flex-grow</code>算是相对的属性，一个放大一个缩小</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-shrink.png" alt="flex-shrink" data-fancybox="gallery"></p><p>如果一个项目的<code>flex-shrink</code>属性为0，其他项目都为1，则空间不足时，属性为0的不缩小。</p><p>如果都是默认值1，则空间不足时，==等比缩小==</p><p><code>注意</code>：负值对该属性无效。</p><h3 id="_4-flex-basis" tabindex="-1">4. flex-basis <a class="header-anchor" href="#_4-flex-basis" aria-label="Permalink to &quot;4. flex-basis&quot;">​</a></h3><p><code>flex-basis</code>属性定义了在分配多余空间==之前==，项目占据的主轴空间（在基本概念中有介绍到）。浏览器根据这个属性，计算主轴是否有多余空间。</p><ul><li>它的默认值为<code>auto</code>，即项目的本来大小。</li></ul><p>简单来说，当设置了<code>flex-basis</code>以后，就设定了==项目的尺寸==。</p><p><strong>注意</strong>：<code>width</code>跟<code>flex-basis</code>的区别是，<code>flex-basis</code>的优先级更高。如果设置的<code>flex-basis</code>的值不为<code>auto</code>，那么<code>width</code>设置什么值都无效，以<code>flex-basis</code>的值为准。只有当<code>flex-basis</code>的值为<code>auto</code>的时候，该项目才会是<code>width</code>设定的值。</p><p><strong>注意：</strong><code>flex-basis</code>和<code>width</code>为<code>auto</code>值，那最后的空间就是根据内容多少来定的，内容多占据的水平空间就多</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-basis.png" alt="flex-basis" data-fancybox="gallery"></p><p>可以看出在<code>item2</code>分配剩余空间之前，<code>item1</code>先占据了<code>300px</code></p><h3 id="_5-flex属性-重点" tabindex="-1">5. flex属性（重点） <a class="header-anchor" href="#_5-flex属性-重点" aria-label="Permalink to &quot;5. flex属性（重点）&quot;">​</a></h3><p><code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。后两个属性可选。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*书写顺序*/</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;&#39;</span><span style="color:#FFCB6B;">flex-grow</span><span style="color:#A6ACCD;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  &lt;&#39;</span><span style="color:#FFCB6B;">flex-shrink</span><span style="color:#A6ACCD;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  &lt;&#39;</span><span style="color:#FFCB6B;">flex-basis</span><span style="color:#A6ACCD;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>对于flex属性有几个常用的属性值<code>auto，none，1</code></p><blockquote><p>一下实例均对<code>item1</code>进行操作</p></blockquote><h5 id="flex-auto" tabindex="-1">flex: auto <a class="header-anchor" href="#flex-auto" aria-label="Permalink to &quot;flex: auto&quot;">​</a></h5><p><code>flex: auto</code> 等同于 <code>flex: 1 1 auto</code></p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-auto.png" alt="flex-auto" data-fancybox="gallery"></p><h5 id="flex-none" tabindex="-1">flex: none <a class="header-anchor" href="#flex-none" aria-label="Permalink to &quot;flex: none&quot;">​</a></h5><p><code>flex: none</code> 等同于<code> flex: 0 0 auto</code></p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex-none.png" alt="flex-none" data-fancybox="gallery"></p><h5 id="flex-1" tabindex="-1">flex: 1 <a class="header-anchor" href="#flex-1" aria-label="Permalink to &quot;flex: 1&quot;">​</a></h5><p>**注意：**当 <code>flex</code> 取值为一个非负数字，则该数字为 <code>flex-grow</code> 值，<code>flex-shrink</code> 取 1，<code>flex-basis</code> 取 0%</p><p>也就是说<code>flex: 1</code>是<code>flex: 1 1 0%</code>的简写</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex1.png" alt="flex1" data-fancybox="gallery"></p><h5 id="flex-100px" tabindex="-1">flex: 100px <a class="header-anchor" href="#flex-100px" aria-label="Permalink to &quot;flex: 100px&quot;">​</a></h5><p>当<code>flex</code>取值为一个长度或者是一个百分比时，则视为 <code>flex-basis</code> 值，<code>flex-grow</code> 取 1，<code>flex-shrink</code> 取 1</p><p><code>flex: 100px</code>等同于<code>flex: 1 1 100px</code></p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex100px.png" alt="flex100px" data-fancybox="gallery"></p><p>**注意：**由于<code>flex-grow: 1</code>所以<code>item1</code>会占满剩余空间</p><p>这部分是面试中常常会提及的内容，面试官：“你知道flex1吗？”</p><h3 id="_6-align-self" tabindex="-1">6. align-self <a class="header-anchor" href="#_6-align-self" aria-label="Permalink to &quot;6. align-self&quot;">​</a></h3><p><code>align-self</code>属性设定单个项目的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/align-self.png" alt="align-self" data-fancybox="gallery"></p><p>给容器设置了下端对齐，再给<code>item1</code>单独设置居中对齐</p><hr><p>以上就是关于flex布局的全部内容了，相信看到这里的你一定有所收获，可以自己动手尝试一下啦！思维导图一定要收好噢！</p><p><img src="https://ljcimg.oss-cn-beijing.aliyuncs.com/img/flex%E5%B8%83%E5%B1%80.png" alt="flex布局" data-fancybox="gallery"></p>`,134),c=[n];function p(t,i,r,d,g,y){return a(),l("div",null,c)}const m=e(o,[["render",p]]);export{x as __pageData,m as default};
