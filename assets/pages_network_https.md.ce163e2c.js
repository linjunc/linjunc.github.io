import{_ as a,c as t,o as e,U as s}from"./chunks/framework.4d5e0f31.js";const P=JSON.parse('{"title":"HTTPS 相关面试题","description":"","frontmatter":{},"headers":[],"relativePath":"pages/network/https.md","lastUpdated":1687077311000}'),l={name:"pages/network/https.md"},o=s('<h1 id="https-相关面试题" tabindex="-1">HTTPS 相关面试题 <a class="header-anchor" href="#https-相关面试题" aria-label="Permalink to &quot;HTTPS 相关面试题&quot;">​</a></h1><h2 id="https-了解吗" tabindex="-1">HTTPS 了解吗？ <a class="header-anchor" href="#https-了解吗" aria-label="Permalink to &quot;HTTPS 了解吗？&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>HTTPS 是采用 TLS 加密的 HTTP 协议，可以说是 HTTP 的安全版本，通过 TLS 协议对数据传输进行加密，以确保安全性</p><p>主要有 3 个特点，数据加密、数据不可被篡改、身份可验证</p></div><h2 id="rsa-的握手过程" tabindex="-1">RSA 的握手过程？ <a class="header-anchor" href="#rsa-的握手过程" aria-label="Permalink to &quot;RSA 的握手过程？&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>首先客户端发送一个 客户端随机数、TLS 版本号、加密套件给服务器</li><li>服务器确认 TLS 版本号，同时生成服务端随机数、需要的加密套件、CA 证书，发送给客户端</li><li>客户端收到后，会对证书进行验证，如果验证成功会用 CA 证书的公钥生成一个 pre-master ，发送给服务器，并将前面通信的内容生成摘要，用 pre-master 加密，发送给服务器以验证通信内容没有被篡改。之后改用密钥通信</li><li>此时客户端有客户端随机数、服务端随机数、pre-master，可以计算出会话密钥</li><li>服务端收到用公钥加密的 pre-master 会用私钥进行解密，得到 pre-master 的内容，用同样的方式生成会话密钥，之后改用密钥通信</li><li>之后就用这个对称密钥加密报文传输。</li></ol></div><h2 id="追问-证书是如何认证的" tabindex="-1">（追问）证书是如何认证的？ <a class="header-anchor" href="#追问-证书是如何认证的" aria-label="Permalink to &quot;（追问）证书是如何认证的？&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>其实认证证书就是通过浏览器或操作系统中的 CA 公钥解密证书的数字签名，得到证书数据的 hash，然后对数字证书的数据部分用同样的 hash 算法，生成 hash，对比 hash，来验证。</p><p>证书是服务器向 CA 申请的，需要提供服务端的公钥等相关信息，CA 会对服务器真实性进行验证，会把公钥还有相关信息打包成一个证书，对这个证书进行 hash + CA 密钥加密得到数字签名。最后 CA 会给服务端颁发数字签名后的证书。</p></div><h2 id="追问-rsa-有什么缺陷吗" tabindex="-1">（追问）RSA 有什么缺陷吗？ <a class="header-anchor" href="#追问-rsa-有什么缺陷吗" aria-label="Permalink to &quot;（追问）RSA 有什么缺陷吗？&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>最大问题是服务端私钥泄漏。</p><p>使用 RSA 密钥协商算法的最大问题是<strong>不支持前向保密</strong>。</p><p>因为客户端传递随机数给服务端时使用的是公钥加密的，服务端收到后，会用私钥解密得到随机数。所以一旦服务端的私钥泄漏了，过去被第三方截获的所有 TLS 通讯密文都会被破解。</p></div><h2 id="ecdhe-了解吗" tabindex="-1">ECDHE 了解吗？ <a class="header-anchor" href="#ecdhe-了解吗" aria-label="Permalink to &quot;ECDHE 了解吗？&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>ECDHE 就解决了 RSA 私钥泄漏的问题</p></div><h2 id="ecdhe-的握手过程" tabindex="-1">ECDHE 的握手过程？ <a class="header-anchor" href="#ecdhe-的握手过程" aria-label="Permalink to &quot;ECDHE 的握手过程？&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p></div><h2 id="https-和-http-的区别" tabindex="-1">HTTPS 和 HTTP 的区别？ <a class="header-anchor" href="#https-和-http-的区别" aria-label="Permalink to &quot;HTTPS 和 HTTP 的区别？&quot;">​</a></h2><h2 id="https-解决了-http-的哪些问题" tabindex="-1">HTTPS 解决了 HTTP 的哪些问题？ <a class="header-anchor" href="#https-解决了-http-的哪些问题" aria-label="Permalink to &quot;HTTPS 解决了 HTTP 的哪些问题？&quot;">​</a></h2><h2 id="https-通信时间总和是多少" tabindex="-1">HTTPS 通信时间总和是多少？ <a class="header-anchor" href="#https-通信时间总和是多少" aria-label="Permalink to &quot;HTTPS 通信时间总和是多少？&quot;">​</a></h2>',16),i=[o];function r(h,c,p,d,T,n){return e(),t("div",null,i)}const m=a(l,[["render",r]]);export{P as __pageData,m as default};
